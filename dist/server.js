/**
 * @Project: FivemTools
 * @Author: Samuelds
 * @License: GNU General Public License v3.0
 * @Source: https://github.com/FivemTools/ft_core
 */

class Entity{constructor(t=0){this.id=t}get model(){return void 0===this._model&&(this._model=GetEntityModel(this.id)),this._model}set model(t){this._model=t}get health(){return this._health=GetEntityHealth(this.id),this._health}set health(t){this._health=t,SetEntityHealth(this.id,t)}get maxHealth(){return this._maxHealth=GetEntityMaxHealth(this.id),this._maxHealth}set maxHealth(t){this._maxHealth=t,SetEntityMaxHealth(this.id,this._maxHealth)}get coords(){const t=GetEntityCoords(this.id);return this._coords={x:t[0],y:t[1],z:t[2]},this._coords}set coords(t){this._coords=t,SetEntityCoords(this.id,t.x,t.y,t.z,!1,!1,!1,!0)}set coordsNoOffset(t){this._coords=t,SetEntityCoordsNoOffset(this.id,t.x,t.y,t.z,!0,!0,!0)}get heading(){return this._heading=GetEntityHeading(this.id),this._heading}set heading(t){this._heading=t,SetEntityHeading(this.id,t)}get collision(){return this._collision=!GetEntityCollisionDisabled(this.id),this._collision}set collision(t){this._collision=value,SetEntityCollision(this.id,t,!1)}get networkId(){return this._networkId=NetworkGetNetworkIdFromEntity(this.id),this._networkId}GetByNetworkId(t){this.id=NetworkGetEntityFromNetworkId(t),this._networkId=t}IsDead(){return Boolean(IsEntityDead(this.id))}IsAlive(){return!this.isDead()}Exist(){return Boolean(DoesEntityExist(this.id))}Delete(){SetEntityAsMissionEntity(this.id,!1,!0),DeleteEntity(this.id)}GetBoneIndex(t){return GetEntityBoneIndexByName(this.id,t)}AsMission(t){let e=0,i=this,s=setInterval((function(){NetworkHasControlOfEntity(i.id)?(SetEntityAsMissionEntity(i.id),IsEntityAMissionEntity(i.id)&&(clearInterval(s),t(!0))):NetworkRequestControlOfEntity(this.id),10===e&&(clearInterval(s),t(!1)),e++}),20)}AsNetworked(t){let e=!1,i=0,s=this,o=setInterval((function(){NetworkHasControlOfEntity(s.id)?(NetworkRegisterEntityAsNetworked(s.id),e=s.networkId,e&&(SetNetworkIdCanMigrate(e,!0),SetNetworkIdExistsOnAllMachines(e,!0),NetworkDoesNetworkIdExist(e)&&(clearInterval(o),t(e)))):NetworkRequestControlOfEntity(this.id),10===i&&(clearInterval(o),t(!1)),i++}),20)}}
class Vehicle extends Entity{get class(){return void 0===this._class&&(this._class=GetVehicleClass(this.id)),this._class}get bodyHealth(){return this._bodyHealth=GetVehicleBodyHealth(this.id),this._bodyHealth}set bodyHealth(t){this._bodyHealth=Number(t),SetVehicleBodyHealth(this.id,Number(t))}get engineHealth(){return this._engineHealth=GetVehicleEngineHealth(this.id),this._engineHealth}set engineHealth(t){this._engineHealth=Number(t),SetVehicleEngineHealth(this.id,Number(t))}get engineIsRunning(){return this._engineIsRunning=GetIsVehicleEngineRunning(this.id),this._engineIsRunning}set engineIsRunning(t){this._engineIsRunning=Boolean(t),SetVehicleEngineOn(this.id,this._engineIsRunning,!0,!0)}get petrolTankHealth(){return this._petrolTankHealth=GetVehiclePetrolTankHealth(this.id),this._petrolTankHealth}set petrolTankHealth(t){this._petrolTankHealth=Number(t),SetVehiclePetrolTankHealth(this.id,this._petrolTankHealth)}get lights(){const t=GetVehicleLightsState(this.id);return this._lights=t[1]+t[2],this._lights}set lightsMode(t){this._lightsMode=Number(t),SetVehicleLightsMode(this.id,this._lightsMode)}set lightMultiplier(t){this._lightMultiplier=Number(t),SetVehicleLightMultiplier(this.id,this._lightMultiplier)}GetNeonLight(t){return void 0===this._neonLight&&(this._neonLight={}),this._neonLight[t]=Boolean(IsVehicleNeonLightEnabled(this.id,t)),this._neonLight[t]}GetAllNeonLight(){for(let t=0;t<3;t++)this.GetNeonLight(t);return this._neonLight}IsNeonLightEnabled(t){return Boolean(IsVehicleNeonLightEnabled(this.id,Boolean(t)))}SetNeonLight(t,e){void 0===this._neonLight&&(this._neonLight={}),console.log(e),this._neonLight[Number(t)]=Boolean(e),SetVehicleNeonLightEnabled(this.id,Number(t),Boolean(e))}SetAllNeonLight(t){for(let e in t)this.SetNeonLight(e,t[e])}get neonColour(){const t=GetVehicleNeonLightsColour(this.id);return this._neonColour={red:t[0],green:t[1],blue:t[2]},this._neonColour}set neonColour(t){this._neonColour=t,SetVehicleNeonLightsColour(this.id,t.red,t.green,t.blue)}get doors(){return this._doors}set doors(t){this._doors=t}get lookStatus(){return this._lookStatus=GetVehicleDoorLockStatus(this.id),this._lookStatus}set lookStatus(t){this._lookStatus=Boolean(t),SetVehicleDoorsLocked(this.id,Boolean(t))}get fuelLevel(){return this._fuelLevel=GetVehicleFuelLevel(this.id),this._fuelLevel}set fuelLevel(t){this._fuelLevel=Number(t),SetVehicleFuelLevel(this.id,this._fuelLevel)}get plateText(){return this._plateText=GetVehicleNumberPlateText(this.id),this._plateText}set plateText(t){this._plateText=t,SetVehicleNumberPlateText(this.id,this._plateText)}get plateStyle(){return this._plateStyle=GetVehicleNumberPlateTextIndex(this.id),this._plateStyle}set plateStyle(t){this._plateStyle=Number(t),SetVehicleNumberPlateTextIndex(this.id,this._plateStyle)}get dirtLevel(){return this._dirtLevel=GetVehicleDirtLevel(this.id),this._dirtLevel}set dirtLevel(t){this._dirtLevel=Number(t),SetVehicleDirtLevel(this.id,Number(t))}get wheelType(){return this._wheelType=GetVehicleWheelType(this.id),this._wheelType}set wheelType(t){this._wheelType=t,SetVehicleWheelType(this.id,t)}get colours(){const t=GetVehicleColours(this.id);return this._colours={primary:t[0],secondary:t[1]},this._colours}set colours(t){this._colours=t,SetVehicleColours(this.id,t.primary,t.secondary)}get primaryColour(){const t=GetVehicleCustomPrimaryColour(this.id);return this._primaryColour={red:t[0],green:t[1],blue:t[2]},this._primaryColour}set primaryColour(t){this._primaryColour=t,SetVehicleCustomPrimaryColour(this.id,t.red,t.green,t.blue)}get secondaryColour(){const t=GetVehicleCustomSecondaryColour(this.id);return this._secondaryColour={red:t[0],green:t[1],blue:t[2]},this._secondaryColour}set secondaryColour(t){this._secondaryColour=t,SetVehicleCustomSecondaryColour(this.id,t.red,t.green,t.blue)}get extraColours(){const t=GetVehicleExtraColours(this.id);return this._extraColours={pearlescent:t[0],wheel:t[1]},this._extraColours}set extraColours(t){this._extraColours=t,SetVehicleExtraColours(this.id,t.pearlescent,t.wheel)}get modColor1(){const t=GetVehicleModColor_1(this.id);return this._modColor1={paintType:t[0],color:t[1],pearlescent:t[2]},this._modColor1}set modColor1(t){this._modColor1=t,SetVehicleModColor_1(this.id,t.paintType,t.color,t.pearlescent)}get modColor2(){const t=GetVehicleModColor_2(this.id);return this._modColor2={paintType:t[0],color:t[1]},this._modColor2}set modColor2(t){this._modColor2=t,SetVehicleModColor_2(this.id,t.paintType,t.color)}get tyreSmokeColor(){const t=GetVehicleTyreSmokeColor(this.id);return this._tyreSmoke={red:t[0],green:t[1],blue:t[2]},this._tyreSmoke}set tyreSmokeColor(t){this._tyreSmoke=t,SetVehicleTyreSmokeColor(this.id,t.red,t.green,t.blue)}get customTires(){return this._customTires}set customTires(t){this._customTires=t}get trailer(){const t=GetVehicleTrailerVehicle(this.id);return this._trailer=t[1],this._trailer}set trailer(t){this._trailer=t,AttachVehicleToTrailer(this.id,t)}get extras(){this._extras={};for(let t=0;t<14;t++)this._extras[t]=Boolean(this.IsVehicleExtraTurnedOn(t));return this._extras}set extras(t){this._extras[t.extra]=t.state,SetVehicleExtra(this.id,t.extra,t.state)}get livery(){return this._livery=GetVehicleLivery(this.id),this._livery}set livery(t){this._livery=t,SetVehicleLivery(this.id,t)}get windowTint(){return this._windowTint=GetVehicleWindowTint(this.id),this._windowTint}set windowTint(t){this._windowTint=t,SetVehicleWindowTint(this.id,t)}get siren(){return this._siren=IsVehicleSirenOn(this.id),this._siren}set siren(t){this._siren=t,SetVehicleSiren(this.id,t)}GetNumberDoors(){return void 0===this._maxDoors&&(this._maxDoors=GetNumberOfVehicleDoors(this.id)),this._maxDoors}IsDoorDamaged(t){return IsVehicleDoorDamaged(this.id,Number(t))}GetDoorAngleRatio(t){return GetVehicleDoorAngleRatio(this.id,Number(t))}GetDoorState(t){let e;return void 0===this._doors&&(this._doors={}),e=this.IsDoorDamaged(t)?-1:this.GetDoorAngleRatio(t),this._doors[Number(t)]=e,e}GetAllDoorState(){this._doors={};for(let t=0;t<this.GetNumberDoors();t++)this.GetDoorState(t);return this._doors}SetDoorBroken(t,e){SetVehicleDoorBroken(this.id,Number(t),Boolean(e)),this._doors[Number(t)]=-1}SetDoorShut(t,e){SetVehicleDoorShut(this.id,Number(t),Boolean(e)),this._doors[Number(t)]=0}SetDoorOpen(t,e,i){SetVehicleDoorOpen(this.id,Number(t),Boolean(e),Boolean(i))}SetDoorControl(t,e,i){SetVehicleDoorControl(this.id,Number(t),Number(e),Number(i))}SetDoorLatched(t,e,i){SetVehicleDoorLatched(this.id,Number(t),Boolean(e),Boolean(i))}SetDoorState(t,e){if(void 0===this._doors&&(this._doors={}),-1===Number(e))this.SetDoorBroken(t,!0);else if(0===Number(e))this.SetDoorShut(t,!0);else{this.SetDoorOpen(t,!1,!0);let e=this;setTimeout((function(){e.SetDoorLatched(t,!1,!0)}),100)}this._doors[Number(t)]=e}SetAllDoorsState(t){for(let e in t)this.SetDoorState(e,t[e])}GetAllTyreBurst(){this._tyreBurst={};const t={wheel_lf:0,wheel_rf:1,wheel_lm1:2,wheel_rm1:3,wheel_lr:4,wheel_rr:5,wheel_lm2:45,wheel_rm2:47,wheel_lm3:46,wheel_rm3:48};for(let e in t)-1!==GetEntityBoneIndexByName(this.id,e)&&IsVehicleTyreBurst(this.id,t[e],!1)&&(this._tyreBurst[t[e]]=!0);return this._tyreBurst}SetTyreBurst(t,e,i=1e3){void 0===this._tyreBurst&&(this._tyreBurst={}),SetVehicleTyreBurst(this.id,Number(t),Boolean(e),i),this._tyreBurst[Number(t)]=Boolean(e)}SetAllTyreBurst(t){for(let e in t)this.SetTyreBurst(e,t[e])}GetAllWindowState(){this.__windows={};const t={window_rf:0,window_lf:1,window_rr:2,window_lr:3};for(let e in t)-1!==GetEntityBoneIndexByName(this.id,e)&&(this.__windows[t[e]]=IsVehicleWindowIntact(this.id,t[e],!1));return this.__windows}SmashWindow(t){SmashVehicleWindow(this.id,Number(t)),this.__windows[Number(t)]=-1}SetAllWindowState(t){void 0===this.__windows&&(this.__windows={});for(let e in t)-1===t[e]&&this.SmashWindow(e)}GetMod(t){return void 0===this._mod&&(this._mod={}),this._mod[Number(t)]=t>=17&&t<=22?Boolean(IsToggleModOn(this.id,Number(t))):GetVehicleMod(this.id,Number(t)),this._mod}GetAllMod(){for(let t=0;t<49;t++)this.GetMod(t);return this._mod}SetAllMod(t){for(let e in t)this.SetMod(e,t[e])}SetMod(t,e){void 0===this._mod&&(this._mod={},SetVehicleModKit(this.id,0)),void 0===this._customTires&&(this._customTires=!1),Number(t)>=17&&Number(t)<=22?(ToggleVehicleMod(this.id,Number(t),Boolean(e)),this._mod[Number(t)]=Boolean(e)):(SetVehicleMod(this.id,Number(t),Number(e),this._customTires),this._mod[Number(t)]=Number(e))}IsVehicleExtraTurnedOn(t){return IsVehicleExtraTurnedOn(this.id,t)}Spawn(t){if(IsModelAVehicle(this._model)){let e=0,i=this;RequestModel(this._model);let s=setInterval((function(){if(HasModelLoaded(i._model)){clearInterval(s),i.id=CreateVehicle(i._model,i._coords.x,i._coords.y-1,i._coords.z,i._heading,!0,!0);const e=["id","_model","_coords","_heading","_networkId","_mod","_neonLight","_doors","_tyreBurst","__windows"];for(let t in i)e.includes(t)||(i[t.substring(1)]=i[t]);void 0!==i._mod&&(SetVehicleModKit(i.id,0),i.SetAllMod(i._mod)),void 0!==i._neonLight&&(i.SetAllNeonLight(i._neonLight),console.log("oui :!!!")),void 0!==i._doors&&i.SetAllDoorsState(i._doors),void 0!==i._tyreBurst&&i.SetAllTyreBurst(i._tyreBurst),void 0!==i.__windows&&i.SetAllWindowState(i.__windows),SetModelAsNoLongerNeeded(i._model),t(i.id)}50===e&&(clearInterval(s),t(!1)),e++}),20)}else t(!1)}}
class Color{constructor(t=0,e=0,i=0,s=0){this.red=t,this.green=e,this.blue=i,this.alpha=s}RGBToHex(){let t=this.r.toString(16),e=this.g.toString(16),i=this.b.toString(16);return 1==t.length&&(t="0"+t),1==e.length&&(e="0"+e),1==i.length&&(i="0"+i),"#"+t+e+i}RGBAToHexA(){let t=this.r.toString(16),e=this.g.toString(16),i=this.b.toString(16),s=Math.round(255*this.a).toString(16);return 1==t.length&&(t="0"+t),1==e.length&&(e="0"+e),1==i.length&&(i="0"+i),1==s.length&&(s="0"+s),"#"+t+e+i+s}hexToRGB(t){if(/^#([\da-f]{3}){1,2}$/i.test(t))return 4==t.length?(this.r="0x"+t[1]+t[1],this.g="0x"+t[2]+t[2],this.b="0x"+t[3]+t[3]):7==t.length&&(this.r="0x"+t[1]+t[2],this.g="0x"+t[3]+t[4],this.b="0x"+t[5]+t[6]),this;console.error(t+" was not a hex value")}hexAToRGBA(t){if(/^#([\da-f]{4}){1,2}$/i.test(t))return 5==t.length?(this.r="0x"+t[1]+t[1],this.g="0x"+t[2]+t[2],this.b="0x"+t[3]+t[3],this.a="0x"+t[4]+t[4]):9==t.length&&(this.r="0x"+t[1]+t[2],this.g="0x"+t[3]+t[4],this.b="0x"+t[5]+t[6],this.a="0x"+t[7]+t[8]),this.a=+(this.a/255).toFixed(3),this;console.error(t+" was not a hex a value")}}
function Enum(t){if(t instanceof Array){let e={},i=0;return t.forEach(t=>{e[t]=i,i++}),Object.freeze(e)}{let e=t;for(let[t,i]of Object.entries(value))e[i]=t;return Object.freeze(e)}}
class Vector3{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}Clone(){return new Vector3(this.x,this.y,this.z)}Add(t,e,i){return t&&e&&i?(this.x+=t,this.y+=e,this.z+=i):"number"==typeof t?(this.x+=t,this.y+=t,this.z+=t):t instanceof Vector3&&(this.x+=t.x,this.y+=t.y,this.z+=t.z),this}Subtract(t,e,i){return t&&e&&i?(this.x-=t,this.y-=e,this.z-=i):"number"==typeof t?(this.x-=t,this.y-=t,this.z-=t):t instanceof Vector3&&(this.x-=t.x,this.y-=t.y,this.z-=t.z),this}Multiply(t,e,i){return t&&e&&i?(this.x*=t,this.y*=e,this.z*=i):"number"==typeof t?(this.x*=t,this.y*=t,this.z*=t):t instanceof Vector3&&(this.x*=t.x,this.y*=t.y,this.z*=t.z),this}Divide(t,e,i){return t&&e&&i?(this.x/=t,this.y/=e,this.z/=i):"number"==typeof t?(this.x/=t,this.y/=t,this.z/=t):t instanceof Vector3&&(this.x/=t.x,this.y/=t.y,this.z/=t.z),this}DotProduct(t){return this.x*t.x+this.y*t.y+this.z*t.z}CrossProduct(t){const e=this.y*t.z-this.z*t.y,i=this.z*t.x-this.z*t.z,s=this.x*t.y-this.z*t.x;return new Vector3(e,i,s)}Normalize(){return this.Divide(this.Length())}IsEquals(t,e,i){return t&&e&&i?this.x===t&&this.y===e&&this.z===i:"number"==typeof t?this.x===t&&this.y===t&&this.z===t:t instanceof Vector3?this.x===t.x&&this.y===t.y&&this.z===t.z:void 0}AngleTo(t){const e=Math.sqrt(this.Length()*t.Length());0===e&&console.error("Vector3: angleTo() can't handle zero length vectors.");const i=this.DotProduct(t)/e;return Math.acos(Math.clamp(i,-1,1))}Length(){return this.x*this.x+this.y*this.y+this.z*this.z}Max(t){return t?(this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this):Math.max(this.x,this.y,this.z)}Min(t){return t?(this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this):Math.min(this.x,this.y,this.z)}Negative(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}ToArray(){return[this.x,this.y,this.z]}DistanceTo(t){return Math.sqrt(this.DistanceToSquared(t))}DistanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}}