/**
 * @Project: FivemTools
 * @Author: Samuelds
 * @License: GNU General Public License v3.0
 * @Source: https://github.com/FivemTools/ft_core
 */

class Audio{PlaySoundAt(e,t,i,r){return PlaySoundFromCoord(t,i,e.x,e.y,e.z,r||null,!1,0,!1),this.id=GetSoundId(),this.id}PlaySoundFromEntity(e,t,i,r){return PlaySoundFromEntity(t,i,e.id,r||null,!1,0),this.id=GetSoundId(),this.id}PlaySoundFrontEnd(e,t,i){return PlaySoundFrontend(e,t,i||null,!1),this.id=GetSoundId(),this.id}StopSound(){StopSound(this.id)}ReleaseSound(){ReleaseSoundId(this.id)}HasSoundFinished(){return HasSoundFinished(this.id)}SetAudioFlag(e,t){"string"==typeof e?SetAudioFlag(e,t):SetAudioFlag(AudioFlag[Number(e)],t)}PlaySound(e,t,i){this.PlaySoundFrontEnd(e,t,i),this.ReleaseSound()}PlayMusic(e){null!==this.musicFile&&CancelMusicEvent(this.musicFile),this.musicFile=e,TriggerMusicEvent(musicFile)}StopMusic(){this.musicFile&&(CancelMusicEvent(this.musicFile),this.musicFile=null)}}
class Blip{NewBlipForCoord(e,t){return this.id=AddBlipForCoord(e.x,e.y,e.z),this.updateData(t),this.id}NewBlipForArea(e,t=1,i=1,r){return this.id=AddBlipForArea(e.x,e.y,e.z,t,i),this.updateData(r),this.id}NewBlipForEntity(e,t){return this.id=AddBlipForEntity(e.id),this.updateData(t),this.id}NewBlipForRadius(e,t=1,i){return this.id=AddBlipForRadius(e.x,e.y,e.z,t),this.updateData(i),this.id}NewBlipForPickup(e,t){return this.id=AddBlipForPickup(e),this.updateData(t),this.id}BlipFromEntity(e){return GetBlipFromEntity(e.id)}get coord(){return GetBlipInfoIdCoord(this.id)}set coord(e){SetBlipCoords(this.id,e.x,e.y,e.z)}set rotation(e){SetBlipRotation(this.id,e),this._rotation=e}get scale(){return this._scale}set scale(e){SetBlipScale(this.id,e),this._scale=taille}get type(){return GetBlipInfoIdType(this.id)}get alpha(){return GetBlipAlpha(this.id)}set alpha(e){SetBlipAlpha(this.id,e)}set priority(e){SetBlipPriority(this.id,e)}set numberLabel(e){ShowNumberOnBlip(this.id,e)}RemoveNumberLabel(){HideNumberOnBlip(this.id)}get color(){return GetBlipColour(this.id)}set color(e){SetBlipColour(this.id,e)}get sprite(){return GetBlipSprite(this.id)}set sprite(e){SetBlipSprite(this.id,e)}set name(e){BeginTextCommandSetBlipName("STRING"),AddTextComponentSubstringPlayerName(e),EndTextCommandSetBlipName(this.id),this._name=e}get name(){return this._name}get entity(){return new Entity(GetBlipInfoIdEntityIndex(this.id))}ShowRoute(e){SetBlipRoute(this.id,e)}IsFriendly(e){SetBlipAsFriendly(this.id,e)}IsFriend(e){ShowFriendIndicatorOnBlip(this.id,e)}IsCrew(e){ShowCrewIndicatorOnBlip(this.id,e)}IsFriendCrew(e){ShowOutlineIndicatorOnBlip(this.id,e)}set secondaryColor(e){SetBlipSecondaryColour(this.id,e.r,e.g,e.b)}set isFlashing(e){SetBlipFlashes(this.id,e)}get isFlashing(){return IsBlipFlashing(this.id)}get isOnMinimap(){return IsBlipOnMinimap(this.id)}get isShortRange(){return IsBlipShortRange(this.id)}set isShortRange(e){SetBlipAsShortRange(this.id,e)}Delete(){DoesBlipExist(this.id)&&RemoveBlip(this.id)}Exist(){return DoesBlipExist(this.id)}get display(){return GetBlipInfoIdDisplay(this.id)}set display(e){SetBlipDisplay(this.id,e)}UpdateData(e){Object.keys(e).forEach(t=>{switch(t){case"sprite":this.sprite=e.sprite;break;case"name":this.name=e.name;break;case"scale":this.scale=e.scale;break;case"display":this.display=e.display;break;case"color":this.color=e.color;break;case"alpha":this.alpha=e.alpha;break;case"coord":this.coord=e.coord;break;case"rotation":this.rotation=e.rotation;break;case"priority":this.priority=e.priority;break;case"numberLabel":this.numberLabel=e.numberLabel;break;case"showRoute":this.ShowRoute(e.showRoute);break;case"isFriend":this.IsFriend(e.isFriend);break;case"isCrew":this.IsCrew(e.isCrew);break;case"secondaryColor":this.secondaryColor=e.secondaryColor;break;case"isFlashing":this.isFlashing=e.isFlashing;break;case"isShortRange":this.isShortRange=e.isShortRange}})}}
class Game{GenerateHash(e){return void 0!==e&&GetHashKey(e)}get language(){const e=GetUserLanguageId();return{id:e,language:Languages[e]}}get gameTime(){return GetGameTimer()}set timeScale(e){SetTimeScale(e<=1&&e>=0?e:1)}get frameCount(){return GetFrameCount()}GetFps(){return 1/this.lastFrameTime}get lastFrameTime(){return GetFrameTime()}get player(){const e=PlayerId();return void 0!==this._player&&e===this._player||(this._player=e),this._player}get maxWantedLevel(){return this.maxWantedLevel=GetMaxWantedLevel(),this._maxWantedLevel}set maxWantedLevel(e){e<0?e=0:e>5&&(e=5),this._maxWantedLevel=e,SetMaxWantedLevel(e)}set wantedMultiplier(e){this._maxWantedLevelMultiplier=e,SetWantedLevelMultiplier(e)}get wantedMultiplier(){return this._maxWantedLevelMultiplier}set showPoliceBlipsOnRadar(e){SetPoliceRadarBlips(e)}get nightVision(){return GetUsingnightvision()}set nightVision(e){SetNightvision(e)}get thermalVision(){return GetUsingseethrough()}set thermalVision(e){SetSeethrough(e)}get isMissionActive(){return GetMissionFlag()}set isMissionActive(e){SetMissionFlag(e)}get isRandomEventActive(){return 1===GetRandomEventFlag()}set isRandomEventActive(e){SetRandomEventFlag(e?1:0)}get isCutsceneActive(){return IsCutsceneActive()}get isWaypointActive(){return IsWaypointActive()}get isPaused(){return IsPauseMenuActive()}set isPaused(e){SetPauseMenuActive(e)}get isLoading(){return GetIsLoadingScreenActive()}StopLoading(){ShutdownLoadingScreen()}get CurrentInputMode(){return IsInputDisabled(2)?InputMode.MOUSSEANDKEYBOARD:InputMode.GAMEPAD}}
class Ped extends Entity{GetPlayer(e){this.id=GetPlayerPed(e)}SetDefaultComponentVariation(){SetPedDefaultComponentVariation(this.id)}SetComponentVariation(e,t,i){SetPedComponentVariation(this.id,e,t,i,0)}IsPlayingAnim(e,t,i=3){return IsEntityPlayingAnim(this.id,e,t,i)}TaskPlayAnim(e,t,i=-1,r=0,o,n=0,s=8,a=8,l=!1,h=!1,d=!1){if(DoesAnimDictExist(e)){RequestAnimDict(e);let c=this,u=setInterval((function(){HasAnimDictLoaded(e)&&(clearInterval(u),-1===i&&0===r&&(i=GetAnimDuration(e,t),setTimeout((function(){o()}),1e3*i)),TaskPlayAnim(c.id,e,t,s,a,i,r,n,l,h,d))}),10)}else console.log("Anim "+e+" not exist !")}TaskPlayAnimAdvanced(e,t,i,r,o,n,s,a,l=-1,h=0,d,c=8,u=8,p=0){if(DoesAnimDictExist(e)){RequestAnimDict(e);let S=this,y=setInterval((function(){HasAnimDictLoaded(e)&&(clearInterval(y),-1===l&&0===h&&(l=GetAnimDuration(e,t),setTimeout((function(){d()}),1e3*l)),TaskPlayAnimAdvanced(S.id,e,t,i,r,o,n,s,a,c,u,l,h,p))}),10)}else console.log("Anim "+e+" not exist !")}ClearPrimaryTasks(){ClearPedTasks(this.id)}ClearSecondaryTasks(){ClearPedSecondaryTask(this.id)}ClearAllTasks(){this.ClearPrimaryTasks(),this.ClearSecondaryTasks()}Spawn(e,t=!1,i=!1){if(IsModelAPed(this._model)){let r=0,o=this;RequestModel(this._model);let n=setInterval((function(){HasModelLoaded(o._model)&&(clearInterval(n),o.id=CreatePed(2,o._model,o._coords.x,o._coords.y,o._coords.z,o._heading,t,i),SetModelAsNoLongerNeeded(o._model),e(o.id)),50===r&&(clearInterval(n),e(!1)),r++}),20)}else e(!1)}CurrentVehicle(){const e=new Vehicle(GetVehiclePedIsIn(this.id,!1));return!!e.Exists()&&e}LastVehicle(){const e=new Vehicle(GetVehiclePedIsIn(this.id,!0));return!!e.Exists()&&e}VehicleTryingToEnter(){const e=new Vehicle(GetVehiclePedIsTryingToEnter(this.id));return!!e.Exists()&&e}SetDrivingStyle(e){SetDriveTaskDrivingStyle(this.id,Number(DrivingStyle[e]))}IsInAnyVehicle(){return IsPedInAnyVehicle(this.id,!1)}IsInVehicle(e){return IsPedInVehicle(this.id,e.id,!1)}IsSittingInAnyVehicle(){return IsPedSittingInAnyVehicle(this.id)}IsSittingInVehicle(e){return IsPedSittingInVehicle(this.id,e.id)}SetIntoVehicle(e,t){SetPedIntoVehicle(this.id,e.id,t)}Kill(){this.health=-1}Resurrect(){const e=this.maxHealth,t=this.collision;ResurrectPed(this.id),this.health=e,this.collision=t,ClearPedTasksImmediately(this.id)}ResetVisibleDamage(){ResetPedVisibleDamage(this.id)}ClearBloodDamage(){ClearPedBloodDamage(this.id)}IsInGroup(){return IsPedInGroup(this.id)}NeverLeavesGroup(e){SetPedNeverLeavesGroup(this.id,e)}LeaveGroup(){RemovePedFromGroup(this.id)}ApplyDamage(e){ApplyDamageToPed(this.id,e,!0)}HasBeenDamagedBy(e){return HasPedBeenDamagedByWeapon(this.id,e,0)}HasBeenDamagedByAnyWeapon(){return HasPedBeenDamagedByWeapon(this.id,0,2)}HasBeenDamagedByAnyMeleeWeapon(){return HasPedBeenDamagedByWeapon(this.id,0,1)}ClearLastWeaponDamage(){ClearPedLastWeaponDamage(this.id)}GiveWeapon(e,t=999,i=!1,r=!0){GiveWeaponToPed(this.id,e,t,i,r)}RemoveWeapon(e){RemoveWeaponFromPed(this.id,e)}RemoveAllWeapons(){RemoveAllPedWeapons(this.id,!0)}get CanRagdoll(){return CanPedRagdoll(this.id)}set CanRagdoll(e){SetPedCanRagdoll(this.id,e)}Ragdoll(e=-1,t=RagdollType.Normal){this.CanRagdoll=!0,SetPedToRagdoll(this.id,e,e,Number(t),!1,!1,!1)}GiveHelmet(e,t,i){GivePedHelmet(this.id,!e,Number(t),i)}RemoveHelmet(e=!0){RemovePedHelmet(this.id,e)}OpenParachute(){ForcePedToOpenParachute(this.id)}GetConfigFlag(e){return GetPedConfigFlag(this.id,e,!0)}SetConfigFlag(e,t){SetPedConfigFlag(this.id,e,t)}ResetConfigFlag(e){SetPedResetFlag(this.id,e,!0)}Clone(e){return new Ped(ClonePed(this.id,e,!1,!1))}}
class Player extends Ped{constructor(e=-1){this.id=GetPlayerPed(e),this.PvPEnabled=!0}get name(){return GetPlayerName(this.id)}get PvPEnabled(){return this.pvp}set PvPEnabled(e){NetworkSetFriendlyFireOption(e),SetCanAttackFriendly(this.character.id,e,e),this.pvp=e}get wantedLevel(){return GetPlayerWantedLevel(this.id)}set wantedLevel(e){SetPlayerWantedLevel(this.id,e,!1),SetPlayerWantedLevelNow(this.id,!1)}get isPlaying(){return IsPlayerPlaying(this.id)}get serverId(){return GetPlayerServerId(this.id)}Spawn(e){exports.spawnmanager.forceRespawn(),exports.spawnmanager.spawnPlayer(null,e)}}
class Style{constructor(e){this._ped=e,e.id&&this.GetHeadData()}_mother=0;_father=0;_skin=0;_shape=0;_pedComponents={};_pedProps={};set mother(e){this._mother=e,SetPedHeadBlendData(this._ped.id,this._father,this._mother,null,this._father,this._mother,null,this._shape,this._skin,null,!0)}get mother(){return this._mother}set father(e){this._father=e,SetPedHeadBlendData(this._ped.id,this._father,this._mother,null,this._father,this._mother,null,this._shape,this._skin,null,!0)}get father(){return this._father}set shape(e){this._shape=e,SetPedHeadBlendData(this._ped.id,this._father,this._mother,null,this._father,this._mother,null,this._shape,this._skin,null,!0)}get shape(){return this._shape}set skin(e){this._skin=e,SetPedHeadBlendData(this._ped.id,this._father,this._mother,null,this._father,this._mother,null,this._shape,this._skin,null,!0)}get sking(){return this._skin}GetHeadData(){var e=new Uint32Array(new ArrayBuffer(80));Citizen.invokeNative("0x2746BD9D88C5C5D0",ped.id,e);const t=e.buffer;return this._father=e[0],this._mother=e[2],this._shape=new Float32Array(t,48,1)[0],this._skin=new Float32Array(t,56,1)[0],{mother:this._mother,father:this._father,shape:this._shape,skin:this._skin}}Setface(e,t){SetPedFaceFeature(this._ped.id,e,t)}GetFace(e){return GetPedFaceFeature(this._ped.id,e)}SetHeadAppearance(e,t,i){SetPedHeadOverlay(this._ped.id,e,t,i)}SetHeadAppearanceColor(e,t){var i=0;switch(e){case 1:case 2:case 10:i=1;break;case 5:case 8:i=2}SetPedHeadOverlayColor(this._ped.id,e,i,t,0)}GetHeadAppearance(e){const t=GetPedHeadOverlayData(this._ped.id,e);return{index:e,value:t[1],opacity:t[5],colorType:t[2],color:t[3]}}set eyeColor(e){SetPedEyeColor(this._ped.id,e)}get eyeColor(){return GetPedEyeColor(this._ped.id)}set hairColor(e){SetPedHairColor(this._ped.id,e,0)}get hairColor(){GetPedHairColor(this._ped.id)}SetHair(e,t){e&&(this.PedComponent(2).index=e),t&&SetPedHairColor(this._ped.id,t,0)}GetHair(){return{type:this.PedComponent(2).index,color:GetPedHairColor(this._ped.id)}}PedComponent(e){if(this._pedComponents[e])return this._pedComponents[e];{let t=new PedComponent(this._ped,e);return this._pedComponents[e]=t,t}}PedProp(e){if(this._pedProps[e])return this._pedProps[e];{let t=new PedProp(this._ped,e);return this._pedProps[e]=t,t}}GetAllComponents(){let e=[];return Object.values(PedComponents).forEach(t=>{if("number"==typeof t){let i=this.PedComponent(t);i.HasAnyVariations&&e.push(i)}}),e}GetAllProps(){let e=[];return Object.value(PedProps).forEach(t=>{if("number"==typeof t){let i=this.PedProp(t);i.HasAnyVariations&&e.push(i)}}),props}GetAllVariations(){let e=[];return Array.prototype.push.apply(e,this.GetAllComponents()),Array.prototype.push.apply(e,this.GetAllProps()),e}RandomizeOutfit(){SetPedRandomComponentVariation(this._ped.id,!1)}RandomizeProps(){SetPedRandomProps(this._ped.id)}ClearProps(){ClearAllPedProps(this._ped.id)}SetDefaultComponentVariation(){SetPedDefaultComponentVariation(this._ped.id)}ClearTattoos(){ClearPedDecorations(this._ped.id)}AddTattos(e,t){AddPedDecorationFromHashes(this._ped.id,Game.GenerateHash(e),Game.GenerateHash(t))}}class PedComponent{_ped;_componentId;constructor(e,t){this._ped=e,this._componentId=t}get count(){return GetNumberOfPedDrawableVariations(this._ped.id,this._componentId)}get index(){return GetPedDrawableVariation(this._ped.id,this._componentId)}set index(e){this.SetVariation(e)}get textureCount(){return GetNumberOfPedTextureVariations(this._ped.id,this._componentId,this.index)}get textureIndex(){return GetPedTextureVariation(this._ped.id,this._componentId)}set textureIndex(e){SetVariation(this.index,e)}SetVariation(e,t=0){return!!this.IsVariationValid(e,t)&&(SetPedComponentVariation(this._ped.id,this._componentId,e,t,2),!0)}IsVariationValid(e,t){return IsPedComponentVariationValid(this._ped.id,this._componentId,e,t)}get hasVariations(){return this.count>1}get hasTextureVariation(){return this.count>1&&this.textureCount>1}get HasAnyVariations(){return this.hasVariations||this.hasTextureVariation}}class PedProp{_ped;_propId;constructor(e,t){this._ped=e,this._propId=t}get count(){return GetNumberOfPedPropDrawableVariations(this._ped.id,this._propId)+1}get index(){return GetPedPropIndex(this._ped.id,this._propId+1)}set index(e){this.SetVariation(e)}get textureCount(){return GetNumberOfPedPropTextureVariations(this._ped.id,this._propId,this.index+1)}get textureIndex(){return 0===this.index?0:GetPedPropTextureIndex(this._ped.id,this._propId)}set textureIndex(e){this.index>0&&SetVariation(this.index,e)}SetVariation(e,t=0){return 0===e?(ClearPedProp(this._ped.id,this._propId),!0):!!this.IsVariationValid(e,t)&&(SetPedPropIndex(this._ped.id,this._propId,e-1,t,!0),!0)}IsVariationValid(e,t=0){return 0===e||IsPedPropValid(this._ped.id,this._propId,e-1,t)}get hasVariations(){return this.count>1}get hasTextureVariation(){return this.count>1&&this.textureCount>1}get HasAnyVariations(){return this.hasVariations||this.hasTextureVariation}}
class World{get currentDate(){new Date(GetClockYear(),GetClockMonth(),GetClockDayOfMonth(),GetClockHours(),GetClockMinutes(),GetClockSeconds())}set currentDate(e){SetClockDate(e.getDate(),e.getMonth(),e.getFullYear),SetClockTime(e.getHours(),e.getMinutes(),e.getSeconds())}set blackout(e){SetArtificialLightsState(e)}get cloudHat(){return this.currentCloudHat}set cloudHat(e){if(this.currentCloudHat=e,this.currentCloudHat===CloudHat.Unknown)return this.currentCloudHat=CloudHat.Clear,void ClearCloudHat();SetCloudHatTransition(this.currentCloudHat||"",3)}get cloudHatOpacity(){return GetCloudHatOpacity()}set cloudHatOpacity(e){SetCloudHatOpacity(e)}get weather(){switch(GetPrevWeatherTypeHashName()){case-1750463879:return Weather.ExtraSunny;case 916995460:return Weather.Clear;case-1530260698:return Weather.Neutral;case 282916021:return Weather.Smog;case-1368164796:return Weather.Foggy;case 821931868:return Weather.Clouds;case-1148613331:return Weather.Overcast;case 1840358669:return Weather.Clearing;case 1420204096:return Weather.Raining;case-1233681761:return Weather.ThunderStorm;case 669657108:return Weather.Blizzard;case-273223690:return Weather.Snowing;case 603685163:return Weather.Snowlight;case-1429616491:return Weather.Christmas;case-921030142:return Weather.Halloween;default:return Weather.Unknown}}set weather(e){e!==Weather.Unknown&&(SetWeatherTypeOverTime(e,1),setTimeout(()=>{SetWeatherTypeNow(e)},100))}get newtWeather(){switch(GetNextWeatherTypeHashName()){case-1750463879:return Weather.ExtraSunny;case 916995460:return Weather.Clear;case-1530260698:return Weather.Neutral;case 282916021:return Weather.Smog;case-1368164796:return Weather.Foggy;case 821931868:return Weather.Clouds;case-1148613331:return Weather.Overcast;case 1840358669:return Weather.Clearing;case 1420204096:return Weather.Raining;case-1233681761:return Weather.ThunderStorm;case 669657108:return Weather.Blizzard;case-273223690:return Weather.Snowing;case 603685163:return Weather.Snowlight;case-1429616491:return Weather.Christmas;case-921030142:return Weather.Halloween;default:return Weather.Unknown}}set newtWeather(e){e!==Weather.Unknown&&SetWeatherTypeOverTime(e,0)}TransitionToWeather(e,t){e!==Weather.Unknown&&SetWeatherTypeOverTime(e,t)}CreateMarker(e,t,i,r,o,n,s,a=!1,l=!1,h=!1,d=null,c=null,u=!1){const p=Object.keys(_MarkerList).length;return _MarkerList[p]={enable:e,type:t,position:i,direction:r,rotation:o,scale:n,color:s,bUaD:a,faceCamera:l,rotateY:h,textureDict:d,textureName:c,drawOnEntity:u},p}DeleteMArker(e){delete _MarkerList[e]}ToggleMarker(e){return _MarkerList[e].enable,_MarkerList[e].enable,_MarkerList[e].enable}GetDistance(e,t){return Math.sqrt(t.DistanceToSquared(e))}CalculateTravelDistance(e,t){return CalculateTravelDistanceBetweenPoints(e.x,e.y,e.z,t.x,t.y,t.z)}GetGroundHeight(e){RequestCollisionAtCoord(e.x,e.y,1e3);const[t,i]=GetGroundZFor_3dCoord(e.x,e.y,1e3,!1);return i}}const _MarkerList={};setTick(()=>{for(let[e,t]of Object.entries(_MarkerList))t.enable&&DrawMarker(t.type,t.position.x,t.position.y,t.position.z,t.direction.x,t.direction.y,t.direction.z,t.rotation.x,t.rotation.y,t.rotation.z,t.scale.x,t.scale.y,t.scale.z,t.color.red,t.color.greend,t.color.blue,t.color.alpha,t.bUaD,t.faceCamera,2,t.rotateY,t.textureDict,t.textureName,t.drawOnEntity)})
;const AudioFlag=new Enum(["ActivateSwitchWheelAudio","AllowCutsceneOverScreenFade","AllowForceRadioAfterRetune","AllowPainAndAmbientSpeechToPlayDuringCutscene","AllowPlayerAIOnMission","AllowPoliceScannerWhenPlayerHasNoControl","AllowRadioDuringSwitch","AllowRadioOverScreenFade","AllowScoreAndRadio","AllowScriptedSpeechInSlowMo","AvoidMissionCompleteDelay","DisableAbortConversationForDeathAndInjury","DisableAbortConversationForRagdoll","DisableBarks","DisableFlightMusic","DisableReplayScriptStreamRecording","EnableHeadsetBeep","ForceConversationInterrupt","ForceSeamlessRadioSwitch","ForceSniperAudio","FrontendRadioDisabled","HoldMissionCompleteWhenPrepared","IsDirectorModeActive","IsPlayerOnMissionForSpeech","ListenerReverbDisabled","LoadMPData","MobileRadioInGame","OnlyAllowScriptTriggerPoliceScanner","PlayMenuMusic","PoliceScannerDisabled","ScriptedConvListenerMaySpeak","SpeechDucksScore","SuppressPlayerScubaBreathing","WantedMusicDisabled","WantedMusicOnMission"]),CloudHat=new Enum({Unknown:"Unknown",Altostratus:"altostratus",Cirrus:"Cirrus",Cirrocumulus:"cirrocumulus",Clear:"Clear 01",Cloudy:"Cloudy 01",Contrails:"Contrails",Horizon:"Horizon",HorizonBand1:"horizonband1",HorizonBand2:"horizonband2",HorizonBand3:"horizonband3",Horsey:"horsey",Nimbus:"Nimbus",Puffs:"Puffs",Rain:"RAIN",Snowy:"Snowy 01",Stormy:"Stormy 01",Stratoscumulus:"stratoscumulus",Stripey:"Stripey",Shower:"shower",Wispy:"Wispy"})
,InputMode=new Enum({MOUSSEANDKEYBOARD:0,GAMEPAD:1}),Control=new Enum(["NextCamera","LookLeftRight","LookUpDown","LookUpOnly","LookDownOnly","LookLeftOnly","LookRightOnly","CinematicSlowMo","FlyUpDown","FlyLeftRight","ScriptedFlyZUp","ScriptedFlyZDown","WeaponWheelUpDown","WeaponWheelLeftRight","WeaponWheelNext","WeaponWheelPrev","SelectNextWeapon","SelectPrevWeapon","SkipCutscene","CharacterWheel","MultiplayerInfo","Sprint","Jump","Enter","Attack","Aim","LookBehind","Phone","SpecialAbility","SpecialAbilitySecondary","MoveLeftRight","MoveUpDown","MoveUpOnly","MoveDownOnly","MoveLeftOnly","MoveRightOnly","Duck","SelectWeapon","Pickup","SniperZoom","SniperZoomInOnly","SniperZoomOutOnly","SniperZoomInSecondary","SniperZoomOutSecondary","Cover","Reload","Talk","Detonate","HUDSpecial","Arrest","AccurateAim","Context","ContextSecondary","WeaponSpecial","WeaponSpecial2","Dive","DropWeapon","DropAmmo","ThrowGrenade","VehicleMoveLeftRight","VehicleMoveUpDown","VehicleMoveUpOnly","VehicleMoveDownOnly","VehicleMoveLeftOnly","VehicleMoveRightOnly","VehicleSpecial","VehicleGunLeftRight","VehicleGunUpDown","VehicleAim","VehicleAttack","VehicleAttack2","VehicleAccelerate","VehicleBrake","VehicleDuck","VehicleHeadlight","VehicleExit","VehicleHandbrake","VehicleHotwireLeft","VehicleHotwireRight","VehicleLookBehind","VehicleCinCam","VehicleNextRadio","VehiclePrevRadio","VehicleNextRadioTrack","VehiclePrevRadioTrack","VehicleRadioWheel","VehicleHorn","VehicleFlyThrottleUp","VehicleFlyThrottleDown","VehicleFlyYawLeft","VehicleFlyYawRight","VehiclePassengerAim","VehiclePassengerAttack","VehicleSpecialAbilityFranklin","VehicleStuntUpDown","VehicleCinematicUpDown","VehicleCinematicUpOnly","VehicleCinematicDownOnly","VehicleCinematicLeftRight","VehicleSelectNextWeapon","VehicleSelectPrevWeapon","VehicleRoof","VehicleJump","VehicleGrapplingHook","VehicleShuffle","VehicleDropProjectile","VehicleMouseControlOverride","VehicleFlyRollLeftRight","VehicleFlyRollLeftOnly","VehicleFlyRollRightOnly","VehicleFlyPitchUpDown","VehicleFlyPitchUpOnly","VehicleFlyPitchDownOnly","VehicleFlyUnderCarriage","VehicleFlyAttack","VehicleFlySelectNextWeapon","VehicleFlySelectPrevWeapon","VehicleFlySelectTargetLeft","VehicleFlySelectTargetRight","VehicleFlyVerticalFlightMode","VehicleFlyDuck","VehicleFlyAttackCamera","VehicleFlyMouseControlOverride","VehicleSubTurnLeftRight","VehicleSubTurnLeftOnly","VehicleSubTurnRightOnly","VehicleSubPitchUpDown","VehicleSubPitchUpOnly","VehicleSubPitchDownOnly","VehicleSubThrottleUp","VehicleSubThrottleDown","VehicleSubAscend","VehicleSubDescend","VehicleSubTurnHardLeft","VehicleSubTurnHardRight","VehicleSubMouseControlOverride","VehiclePushbikePedal","VehiclePushbikeSprint","VehiclePushbikeFrontBrake","VehiclePushbikeRearBrake","MeleeAttackLight","MeleeAttackHeavy","MeleeAttackAlternate","MeleeBlock","ParachuteDeploy","ParachuteDetach","ParachuteTurnLeftRight","ParachuteTurnLeftOnly","ParachuteTurnRightOnly","ParachutePitchUpDown","ParachutePitchUpOnly","ParachutePitchDownOnly","ParachuteBrakeLeft","ParachuteBrakeRight","ParachuteSmoke","ParachutePrecisionLanding","Map","SelectWeaponUnarmed","SelectWeaponMelee","SelectWeaponHandgun","SelectWeaponShotgun","SelectWeaponSmg","SelectWeaponAutoRifle","SelectWeaponSniper","SelectWeaponHeavy","SelectWeaponSpecial","SelectCharacterMichael","SelectCharacterFranklin","SelectCharacterTrevor","SelectCharacterMultiplayer","SaveReplayClip","SpecialAbilityPC","PhoneUp","PhoneDown","PhoneLeft","PhoneRight","PhoneSelect","PhoneCancel","PhoneOption","PhoneExtraOption","PhoneScrollForward","PhoneScrollBackward","PhoneCameraFocusLock","PhoneCameraGrid","PhoneCameraSelfie","PhoneCameraDOF","PhoneCameraExpression","FrontendDown","FrontendUp","FrontendLeft","FrontendRight","FrontendRdown","FrontendRup","FrontendRleft","FrontendRright","FrontendAxisX","FrontendAxisY","FrontendRightAxisX","FrontendRightAxisY","FrontendPause","FrontendPauseAlternate","FrontendAccept","FrontendCancel","FrontendX","FrontendY","FrontendLb","FrontendRb","FrontendLt","FrontendRt","FrontendLs","FrontendRs","FrontendLeaderboard","FrontendSocialClub","FrontendSocialClubSecondary","FrontendDelete","FrontendEndscreenAccept","FrontendEndscreenExpand","FrontendSelect","ScriptLeftAxisX","ScriptLeftAxisY","ScriptRightAxisX","ScriptRightAxisY","ScriptRUp","ScriptRDown","ScriptRLeft","ScriptRRight","ScriptLB","ScriptRB","ScriptLT","ScriptRT","ScriptLS","ScriptRS","ScriptPadUp","ScriptPadDown","ScriptPadLeft","ScriptPadRight","ScriptSelect","CursorAccept","CursorCancel","CursorX","CursorY","CursorScrollUp","CursorScrollDown","EnterCheatCode","InteractionMenu","MpTextChatAll","MpTextChatTeam","MpTextChatFriends","MpTextChatCrew","PushToTalk","CreatorLS","CreatorRS","CreatorLT","CreatorRT","CreatorMenuToggle","CreatorAccept","CreatorDelete","Attack2","RappelJump","RappelLongJump","RappelSmashWindow","PrevWeapon","NextWeapon","MeleeAttack1","MeleeAttack2","Whistle","MoveLeft","MoveRight","MoveUp","MoveDown","LookLeft","LookRight","LookUp","LookDown","SniperZoomIn","SniperZoomOut","SniperZoomInAlternate","SniperZoomOutAlternate","VehicleMoveLeft","VehicleMoveRight","VehicleMoveUp","VehicleMoveDown","VehicleGunLeft","VehicleGunRight","VehicleGunUp","VehicleGunDown","VehicleLookLeft","VehicleLookRight","ReplayStartStopRecording","ReplayStartStopRecordingSecondary","ScaledLookLeftRight","ScaledLookUpDown","ScaledLookUpOnly","ScaledLookDownOnly","ScaledLookLeftOnly","ScaledLookRightOnly","ReplayMarkerDelete","ReplayClipDelete","ReplayPause","ReplayRewind","ReplayFfwd","ReplayNewmarker","ReplayRecord","ReplayScreenshot","ReplayHidehud","ReplayStartpoint","ReplayEndpoint","ReplayAdvance","ReplayBack","ReplayTools","ReplayRestart","ReplayShowhotkey","ReplayCycleMarkerLeft","ReplayCycleMarkerRight","ReplayFOVIncrease","ReplayFOVDecrease","ReplayCameraUp","ReplayCameraDown","ReplaySave","ReplayToggletime","ReplayToggletips","ReplayPreview","ReplayToggleTimeline","ReplayTimelinePickupClip","ReplayTimelineDuplicateClip","ReplayTimelinePlaceClip","ReplayCtrl","ReplayTimelineSave","ReplayPreviewAudio","VehicleDriveLook","VehicleDriveLook2","VehicleFlyAttack2","RadioWheelUpDown","RadioWheelLeftRight","VehicleSlowMoUpDown","VehicleSlowMoUpOnly","VehicleSlowMoDownOnly","VehicleHydraulicsControlToggle","VehicleHydraulicsControlLeft","VehicleHydraulicsControlRight","VehicleHydraulicsControlUp","VehicleHydraulicsControlDown","VehicleHydraulicsControlUpDown","VehicleHydraulicsControlLeftRight","SwitchVisor","VehicleMeleeHold","VehicleMeleeLeft","VehicleMeleeRight","MapPointOfInterest","ReplaySnapmaticPhoto","VehicleCarJump","VehicleRocketBoost","VehicleFlyBoost","VehicleParachute","VehicleBikeWings","VehicleFlyBombBay","VehicleFlyCounter","VehicleFlyTransform"]),DrivingStyle=new Enum({None:0,Normal:786603,IgnoreLights:2883621,SometimesOvertakeTraffic:5,Rushed:1074528293,AvoidTraffic:786468,AvoidTrafficExtremely:6,AvoidHighwaysWhenPossible:536870912,IgnorePathing:16777216,IgnoreRoads:4194304,ShortestPath:262144,Backwards:1024}),VehicleDrivingFlags=new Enum({None:0,FollowTraffic:1,YieldToPeds:2,AvoidVehicles:4,AvoidEmptyVehicles:8,AvoidPeds:16,AvoidObjects:32,StopAtTrafficLights:128,UseBlinkers:256,AllowGoingWrongWay:512,Reverse:1024,AllowMedianCrossing:262144,DriveBySight:4194304,IgnorePathFinding:16777216,TryToAvoidHighways:536870912,StopAtDestination:2147483648}),HelmetType=new Enum({RegularMotorcycleHelmet:4096,FiremanHelmet:16384,PilotHeadset:32768}),Languages=new Enum({7:"french",9:"japanese",10:"spanish",12:"english",16:"portuguese",17:"korean",21:"italian",22:"german",25:"russian"}),RagdollType=new Enum({Normal:0,StiffLegs:1,NarrowLegs:2,WideLegs:3}),PedComponents=new Enum(["Face","Head","Hair","Torso","Legs","Hands","Shoes","Special1","Special2","Special3","Textures","Torso2"]),PedProps=new Enum(["Hats","Glasses","EarPieces","Unknown3","Unknown4","Unknown5","Watches","Wristbands","Unknown8","Unknown9"]),FaceEnum=new Enum(["Nose_Width","Nose_Peak_Hight","Nose_Peak_Lenght","Nose_Bone_High","Nose_Peak_Lowering","Nose_Bone_Twist","EyeBrown_High","EyeBrown_Forward","Cheeks_Bone_High","Cheeks_Bone_Width","Cheeks_Width","Eyes_Openning","Lips_Thickness","Jaw_Bone_Width","Jaw_Bone_Back_Lenght ","Chimp_Bone_Lowering ","Chimp_Bone_Lenght ","Chimp_Bone_Width","Chimp_Hole","Neck_Thikness"]),HeadAppearanceEnum=new Enum(["Blemishes","Beard","Eyebrows","Skin_Ageing","Makeup","Blush","Skin_Complexion","Skin_SunDamage","Lipstick","Moles_Freckles","Chest_Hair","Body_Blemishes","Add_Body_Blemish"]),VehicleSeat=new Enum({None:-3,Any:-2,Driver:-1,Passenger:0,LeftFront:-1,RightFront:0,LeftRear:1,RightRear:2,ExtraSeat1:3,ExtraSeat2:4,ExtraSeat3:5,ExtraSeat4:6,ExtraSeat5:7,ExtraSeat6:8,ExtraSeat7:9,ExtraSeat8:10,ExtraSeat9:11,ExtraSeat10:12,ExtraSeat11:13,ExtraSeat12:14}),Weather=new Enum({Unknown:-1,ExtraSunny:"EXTRASUNNY",Clear:"CLEAR",Clouds:"CLOUDS",Smog:"SMOG",Foggy:"FOGGY",Overcast:"OVERCAST",Raining:"RAIN",ThunderStorm:"THUNDER",Clearing:"CLEARING",Neutral:"NEUTRAL",Snowing:"SNOW",Blizzard:"BLIZZARD",Snowlight:"SNOWLIGHT",Christmas:"XMAS",Halloween:"HALLOWEEN"})
;let _onSpawn=[];function OnPlayerSpawn(e){_onSpawn.push(e)}RegisterServerEvent("playerSpawned"),AddEventHandler("playerSpawned",(function(){_onSpawn.forEach((function(e){e()}))}));
let _onSessionStarted=[];function OnSessionStarted(e){_onSessionStarted.push(e)}const _OnSessionStartedTimer=setInterval((function(){NetworkIsSessionStarted()&&(clearInterval(_OnSessionStartedTimer),_onSessionStarted.forEach((function(e){e()})))}),10);
class BlipsManager{_blips=[];Add(e,t){this._blips[e]=t}Remove(e){this._blips[e]=void 0}Show(e){this._blips[e].display=!0}Hide(e){this._blips[e].display=!1}Get(e){return this._blips[e]}}
class Entity{constructor(e=0){this.id=e}get model(){return void 0===this._model&&(this._model=GetEntityModel(this.id)),this._model}set model(e){this._model=e}get health(){return this._health=GetEntityHealth(this.id),this._health}set health(e){this._health=e,SetEntityHealth(this.id,e)}get maxHealth(){return this._maxHealth=GetEntityMaxHealth(this.id),this._maxHealth}set maxHealth(e){this._maxHealth=e,SetEntityMaxHealth(this.id,this._maxHealth)}get coords(){const e=GetEntityCoords(this.id);return this._coords={x:e[0],y:e[1],z:e[2]},this._coords}set coords(e){this._coords=e,SetEntityCoords(this.id,e.x,e.y,e.z,!1,!1,!1,!0)}set coordsNoOffset(e){this._coords=e,SetEntityCoordsNoOffset(this.id,e.x,e.y,e.z,!0,!0,!0)}get heading(){return this._heading=GetEntityHeading(this.id),this._heading}set heading(e){this._heading=e,SetEntityHeading(this.id,e)}get collision(){return this._collision=!GetEntityCollisionDisabled(this.id),this._collision}set collision(e){this._collision=value,SetEntityCollision(this.id,e,!1)}get networkId(){return this._networkId=NetworkGetNetworkIdFromEntity(this.id),this._networkId}GetByNetworkId(e){this.id=NetworkGetEntityFromNetworkId(e),this._networkId=e}IsDead(){return Boolean(IsEntityDead(this.id))}IsAlive(){return!this.isDead()}Exist(){return Boolean(DoesEntityExist(this.id))}Delete(){SetEntityAsMissionEntity(this.id,!1,!0),DeleteEntity(this.id)}GetBoneIndex(e){return GetEntityBoneIndexByName(this.id,e)}AsMission(e){let t=0,i=this,r=setInterval((function(){NetworkHasControlOfEntity(i.id)?(SetEntityAsMissionEntity(i.id),IsEntityAMissionEntity(i.id)&&(clearInterval(r),e(!0))):NetworkRequestControlOfEntity(this.id),10===t&&(clearInterval(r),e(!1)),t++}),20)}AsNetworked(e){let t=!1,i=0,r=this,o=setInterval((function(){NetworkHasControlOfEntity(r.id)?(NetworkRegisterEntityAsNetworked(r.id),t=r.networkId,t&&(SetNetworkIdCanMigrate(t,!0),SetNetworkIdExistsOnAllMachines(t,!0),NetworkDoesNetworkIdExist(t)&&(clearInterval(o),e(t)))):NetworkRequestControlOfEntity(this.id),10===i&&(clearInterval(o),e(!1)),i++}),20)}}
class Vehicle extends Entity{get class(){return void 0===this._class&&(this._class=GetVehicleClass(this.id)),this._class}get bodyHealth(){return this._bodyHealth=GetVehicleBodyHealth(this.id),this._bodyHealth}set bodyHealth(e){this._bodyHealth=Number(e),SetVehicleBodyHealth(this.id,Number(e))}get engineHealth(){return this._engineHealth=GetVehicleEngineHealth(this.id),this._engineHealth}set engineHealth(e){this._engineHealth=Number(e),SetVehicleEngineHealth(this.id,Number(e))}get engineIsRunning(){return this._engineIsRunning=GetIsVehicleEngineRunning(this.id),this._engineIsRunning}set engineIsRunning(e){this._engineIsRunning=Boolean(e),SetVehicleEngineOn(this.id,this._engineIsRunning,!0,!0)}get petrolTankHealth(){return this._petrolTankHealth=GetVehiclePetrolTankHealth(this.id),this._petrolTankHealth}set petrolTankHealth(e){this._petrolTankHealth=Number(e),SetVehiclePetrolTankHealth(this.id,this._petrolTankHealth)}get lights(){const e=GetVehicleLightsState(this.id);return this._lights=e[1]+e[2],this._lights}set lightsMode(e){this._lightsMode=Number(e),SetVehicleLightsMode(this.id,this._lightsMode)}set lightMultiplier(e){this._lightMultiplier=Number(e),SetVehicleLightMultiplier(this.id,this._lightMultiplier)}GetNeonLight(e){return void 0===this._neonLight&&(this._neonLight={}),this._neonLight[e]=Boolean(IsVehicleNeonLightEnabled(this.id,e)),this._neonLight[e]}GetAllNeonLight(){for(let e=0;e<3;e++)this.GetNeonLight(e);return this._neonLight}IsNeonLightEnabled(e){return Boolean(IsVehicleNeonLightEnabled(this.id,Boolean(e)))}SetNeonLight(e,t){void 0===this._neonLight&&(this._neonLight={}),console.log(t),this._neonLight[Number(e)]=Boolean(t),SetVehicleNeonLightEnabled(this.id,Number(e),Boolean(t))}SetAllNeonLight(e){for(let t in e)this.SetNeonLight(t,e[t])}get neonColour(){const e=GetVehicleNeonLightsColour(this.id);return this._neonColour={red:e[0],green:e[1],blue:e[2]},this._neonColour}set neonColour(e){this._neonColour=e,SetVehicleNeonLightsColour(this.id,e.red,e.green,e.blue)}get doors(){return this._doors}set doors(e){this._doors=e}get lookStatus(){return this._lookStatus=GetVehicleDoorLockStatus(this.id),this._lookStatus}set lookStatus(e){this._lookStatus=Boolean(e),SetVehicleDoorsLocked(this.id,Boolean(e))}get fuelLevel(){return this._fuelLevel=GetVehicleFuelLevel(this.id),this._fuelLevel}set fuelLevel(e){this._fuelLevel=Number(e),SetVehicleFuelLevel(this.id,this._fuelLevel)}get plateText(){return this._plateText=GetVehicleNumberPlateText(this.id),this._plateText}set plateText(e){this._plateText=e,SetVehicleNumberPlateText(this.id,this._plateText)}get plateStyle(){return this._plateStyle=GetVehicleNumberPlateTextIndex(this.id),this._plateStyle}set plateStyle(e){this._plateStyle=Number(e),SetVehicleNumberPlateTextIndex(this.id,this._plateStyle)}get dirtLevel(){return this._dirtLevel=GetVehicleDirtLevel(this.id),this._dirtLevel}set dirtLevel(e){this._dirtLevel=Number(e),SetVehicleDirtLevel(this.id,Number(e))}get wheelType(){return this._wheelType=GetVehicleWheelType(this.id),this._wheelType}set wheelType(e){this._wheelType=e,SetVehicleWheelType(this.id,e)}get colours(){const e=GetVehicleColours(this.id);return this._colours={primary:e[0],secondary:e[1]},this._colours}set colours(e){this._colours=e,SetVehicleColours(this.id,e.primary,e.secondary)}get primaryColour(){const e=GetVehicleCustomPrimaryColour(this.id);return this._primaryColour={red:e[0],green:e[1],blue:e[2]},this._primaryColour}set primaryColour(e){this._primaryColour=e,SetVehicleCustomPrimaryColour(this.id,e.red,e.green,e.blue)}get secondaryColour(){const e=GetVehicleCustomSecondaryColour(this.id);return this._secondaryColour={red:e[0],green:e[1],blue:e[2]},this._secondaryColour}set secondaryColour(e){this._secondaryColour=e,SetVehicleCustomSecondaryColour(this.id,e.red,e.green,e.blue)}get extraColours(){const e=GetVehicleExtraColours(this.id);return this._extraColours={pearlescent:e[0],wheel:e[1]},this._extraColours}set extraColours(e){this._extraColours=e,SetVehicleExtraColours(this.id,e.pearlescent,e.wheel)}get modColor1(){const e=GetVehicleModColor_1(this.id);return this._modColor1={paintType:e[0],color:e[1],pearlescent:e[2]},this._modColor1}set modColor1(e){this._modColor1=e,SetVehicleModColor_1(this.id,e.paintType,e.color,e.pearlescent)}get modColor2(){const e=GetVehicleModColor_2(this.id);return this._modColor2={paintType:e[0],color:e[1]},this._modColor2}set modColor2(e){this._modColor2=e,SetVehicleModColor_2(this.id,e.paintType,e.color)}get tyreSmokeColor(){const e=GetVehicleTyreSmokeColor(this.id);return this._tyreSmoke={red:e[0],green:e[1],blue:e[2]},this._tyreSmoke}set tyreSmokeColor(e){this._tyreSmoke=e,SetVehicleTyreSmokeColor(this.id,e.red,e.green,e.blue)}get customTires(){return this._customTires}set customTires(e){this._customTires=e}get trailer(){const e=GetVehicleTrailerVehicle(this.id);return this._trailer=e[1],this._trailer}set trailer(e){this._trailer=e,AttachVehicleToTrailer(this.id,e)}get extras(){this._extras={};for(let e=0;e<14;e++)this._extras[e]=Boolean(this.IsVehicleExtraTurnedOn(e));return this._extras}set extras(e){this._extras[e.extra]=e.state,SetVehicleExtra(this.id,e.extra,e.state)}get livery(){return this._livery=GetVehicleLivery(this.id),this._livery}set livery(e){this._livery=e,SetVehicleLivery(this.id,e)}get windowTint(){return this._windowTint=GetVehicleWindowTint(this.id),this._windowTint}set windowTint(e){this._windowTint=e,SetVehicleWindowTint(this.id,e)}get siren(){return this._siren=IsVehicleSirenOn(this.id),this._siren}set siren(e){this._siren=e,SetVehicleSiren(this.id,e)}GetNumberDoors(){return void 0===this._maxDoors&&(this._maxDoors=GetNumberOfVehicleDoors(this.id)),this._maxDoors}IsDoorDamaged(e){return IsVehicleDoorDamaged(this.id,Number(e))}GetDoorAngleRatio(e){return GetVehicleDoorAngleRatio(this.id,Number(e))}GetDoorState(e){let t;return void 0===this._doors&&(this._doors={}),t=this.IsDoorDamaged(e)?-1:this.GetDoorAngleRatio(e),this._doors[Number(e)]=t,t}GetAllDoorState(){this._doors={};for(let e=0;e<this.GetNumberDoors();e++)this.GetDoorState(e);return this._doors}SetDoorBroken(e,t){SetVehicleDoorBroken(this.id,Number(e),Boolean(t)),this._doors[Number(e)]=-1}SetDoorShut(e,t){SetVehicleDoorShut(this.id,Number(e),Boolean(t)),this._doors[Number(e)]=0}SetDoorOpen(e,t,i){SetVehicleDoorOpen(this.id,Number(e),Boolean(t),Boolean(i))}SetDoorControl(e,t,i){SetVehicleDoorControl(this.id,Number(e),Number(t),Number(i))}SetDoorLatched(e,t,i){SetVehicleDoorLatched(this.id,Number(e),Boolean(t),Boolean(i))}SetDoorState(e,t){if(void 0===this._doors&&(this._doors={}),-1===Number(t))this.SetDoorBroken(e,!0);else if(0===Number(t))this.SetDoorShut(e,!0);else{this.SetDoorOpen(e,!1,!0);let t=this;setTimeout((function(){t.SetDoorLatched(e,!1,!0)}),100)}this._doors[Number(e)]=t}SetAllDoorsState(e){for(let t in e)this.SetDoorState(t,e[t])}GetAllTyreBurst(){this._tyreBurst={};const e={wheel_lf:0,wheel_rf:1,wheel_lm1:2,wheel_rm1:3,wheel_lr:4,wheel_rr:5,wheel_lm2:45,wheel_rm2:47,wheel_lm3:46,wheel_rm3:48};for(let t in e)-1!==GetEntityBoneIndexByName(this.id,t)&&IsVehicleTyreBurst(this.id,e[t],!1)&&(this._tyreBurst[e[t]]=!0);return this._tyreBurst}SetTyreBurst(e,t,i=1e3){void 0===this._tyreBurst&&(this._tyreBurst={}),SetVehicleTyreBurst(this.id,Number(e),Boolean(t),i),this._tyreBurst[Number(e)]=Boolean(t)}SetAllTyreBurst(e){for(let t in e)this.SetTyreBurst(t,e[t])}GetAllWindowState(){this.__windows={};const e={window_rf:0,window_lf:1,window_rr:2,window_lr:3};for(let t in e)-1!==GetEntityBoneIndexByName(this.id,t)&&(this.__windows[e[t]]=IsVehicleWindowIntact(this.id,e[t],!1));return this.__windows}SmashWindow(e){SmashVehicleWindow(this.id,Number(e)),this.__windows[Number(e)]=-1}SetAllWindowState(e){void 0===this.__windows&&(this.__windows={});for(let t in e)-1===e[t]&&this.SmashWindow(t)}GetMod(e){return void 0===this._mod&&(this._mod={}),this._mod[Number(e)]=e>=17&&e<=22?Boolean(IsToggleModOn(this.id,Number(e))):GetVehicleMod(this.id,Number(e)),this._mod}GetAllMod(){for(let e=0;e<49;e++)this.GetMod(e);return this._mod}SetAllMod(e){for(let t in e)this.SetMod(t,e[t])}SetMod(e,t){void 0===this._mod&&(this._mod={},SetVehicleModKit(this.id,0)),void 0===this._customTires&&(this._customTires=!1),Number(e)>=17&&Number(e)<=22?(ToggleVehicleMod(this.id,Number(e),Boolean(t)),this._mod[Number(e)]=Boolean(t)):(SetVehicleMod(this.id,Number(e),Number(t),this._customTires),this._mod[Number(e)]=Number(t))}IsVehicleExtraTurnedOn(e){return IsVehicleExtraTurnedOn(this.id,e)}Spawn(e){if(IsModelAVehicle(this._model)){let t=0,i=this;RequestModel(this._model);let r=setInterval((function(){if(HasModelLoaded(i._model)){clearInterval(r),i.id=CreateVehicle(i._model,i._coords.x,i._coords.y-1,i._coords.z,i._heading,!0,!0);const t=["id","_model","_coords","_heading","_networkId","_mod","_neonLight","_doors","_tyreBurst","__windows"];for(let e in i)t.includes(e)||(i[e.substring(1)]=i[e]);void 0!==i._mod&&(SetVehicleModKit(i.id,0),i.SetAllMod(i._mod)),void 0!==i._neonLight&&(i.SetAllNeonLight(i._neonLight),console.log("oui :!!!")),void 0!==i._doors&&i.SetAllDoorsState(i._doors),void 0!==i._tyreBurst&&i.SetAllTyreBurst(i._tyreBurst),void 0!==i.__windows&&i.SetAllWindowState(i.__windows),SetModelAsNoLongerNeeded(i._model),e(i.id)}50===t&&(clearInterval(r),e(!1)),t++}),20)}else e(!1)}}
class Color{constructor(e=0,t=0,i=0,r=0){this.red=e,this.green=t,this.blue=i,this.alpha=r}RGBToHex(){let e=this.r.toString(16),t=this.g.toString(16),i=this.b.toString(16);return 1==e.length&&(e="0"+e),1==t.length&&(t="0"+t),1==i.length&&(i="0"+i),"#"+e+t+i}RGBAToHexA(){let e=this.r.toString(16),t=this.g.toString(16),i=this.b.toString(16),r=Math.round(255*this.a).toString(16);return 1==e.length&&(e="0"+e),1==t.length&&(t="0"+t),1==i.length&&(i="0"+i),1==r.length&&(r="0"+r),"#"+e+t+i+r}hexToRGB(e){if(/^#([\da-f]{3}){1,2}$/i.test(e))return 4==e.length?(this.r="0x"+e[1]+e[1],this.g="0x"+e[2]+e[2],this.b="0x"+e[3]+e[3]):7==e.length&&(this.r="0x"+e[1]+e[2],this.g="0x"+e[3]+e[4],this.b="0x"+e[5]+e[6]),this;console.error(e+" was not a hex value")}hexAToRGBA(e){if(/^#([\da-f]{4}){1,2}$/i.test(e))return 5==e.length?(this.r="0x"+e[1]+e[1],this.g="0x"+e[2]+e[2],this.b="0x"+e[3]+e[3],this.a="0x"+e[4]+e[4]):9==e.length&&(this.r="0x"+e[1]+e[2],this.g="0x"+e[3]+e[4],this.b="0x"+e[5]+e[6],this.a="0x"+e[7]+e[8]),this.a=+(this.a/255).toFixed(3),this;console.error(e+" was not a hex a value")}}
function Enum(e){if(e instanceof Array){let t={},i=0;return e.forEach(e=>{t[e]=i,i++}),Object.freeze(t)}{let t=e;for(let[e,i]of Object.entries(value))t[i]=e;return Object.freeze(t)}}
class Vector3{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}Clone(){return new Vector3(this.x,this.y,this.z)}Add(e,t,i){return e&&t&&i?(this.x+=e,this.y+=t,this.z+=i):"number"==typeof e?(this.x+=e,this.y+=e,this.z+=e):e instanceof Vector3&&(this.x+=e.x,this.y+=e.y,this.z+=e.z),this}Subtract(e,t,i){return e&&t&&i?(this.x-=e,this.y-=t,this.z-=i):"number"==typeof e?(this.x-=e,this.y-=e,this.z-=e):e instanceof Vector3&&(this.x-=e.x,this.y-=e.y,this.z-=e.z),this}Multiply(e,t,i){return e&&t&&i?(this.x*=e,this.y*=t,this.z*=i):"number"==typeof e?(this.x*=e,this.y*=e,this.z*=e):e instanceof Vector3&&(this.x*=e.x,this.y*=e.y,this.z*=e.z),this}Divide(e,t,i){return e&&t&&i?(this.x/=e,this.y/=t,this.z/=i):"number"==typeof e?(this.x/=e,this.y/=e,this.z/=e):e instanceof Vector3&&(this.x/=e.x,this.y/=e.y,this.z/=e.z),this}DotProduct(e){return this.x*e.x+this.y*e.y+this.z*e.z}CrossProduct(e){const t=this.y*e.z-this.z*e.y,i=this.z*e.x-this.z*e.z,r=this.x*e.y-this.z*e.x;return new Vector3(t,i,r)}Normalize(){return this.Divide(this.Length())}IsEquals(e,t,i){return e&&t&&i?this.x===e&&this.y===t&&this.z===i:"number"==typeof e?this.x===e&&this.y===e&&this.z===e:e instanceof Vector3?this.x===e.x&&this.y===e.y&&this.z===e.z:void 0}AngleTo(e){const t=Math.sqrt(this.Length()*e.Length());0===t&&console.error("Vector3: angleTo() can't handle zero length vectors.");const i=this.DotProduct(e)/t;return Math.acos(Math.clamp(i,-1,1))}Length(){return this.x*this.x+this.y*this.y+this.z*this.z}Max(e){return e?(this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this):Math.max(this.x,this.y,this.z)}Min(e){return e?(this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this):Math.min(this.x,this.y,this.z)}Negative(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}ToArray(){return[this.x,this.y,this.z]}DistanceTo(e){return Math.sqrt(this.DistanceToSquared(e))}DistanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}}