/**
 * @Project: FivemTools
 * @Author: Samuelds
 * @License: GNU General Public License v3.0
 * @Source: https://github.com/FivemTools/ft_core
 */

class Audio{PlaySoundAt(e,t,i,o){return PlaySoundFromCoord(t,i,e.x,e.y,e.z,o||null,!1,0,!1),this.id=GetSoundId(),this.id}PlaySoundFromEntity(e,t,i,o){return PlaySoundFromEntity(t,i,e.id,o||null,!1,0),this.id=GetSoundId(),this.id}PlaySoundFrontEnd(e,t,i){return PlaySoundFrontend(e,t,i||null,!1),this.id=GetSoundId(),this.id}StopSound(){StopSound(this.id)}ReleaseSound(){ReleaseSoundId(this.id)}HasSoundFinished(){return HasSoundFinished(this.id)}SetAudioFlag(e,t){"string"==typeof e?SetAudioFlag(e,t):SetAudioFlag(AudioFlag[Number(e)],t)}PlaySound(e,t,i){this.PlaySoundFrontEnd(e,t,i),this.ReleaseSound()}PlayMusic(e){null!==this.musicFile&&CancelMusicEvent(this.musicFile),this.musicFile=e,TriggerMusicEvent(musicFile)}StopMusic(){this.musicFile&&(CancelMusicEvent(this.musicFile),this.musicFile=null)}}
class Entity{constructor(e=0){this.id=e}get model(){return void 0===this._model&&(this._model=GetEntityModel(this.id)),this._model}set model(e){this._model=e}SetModelByName(e){this.model=GetHashKey(e)}get health(){return this._health=GetEntityHealth(this.id),this._health}set health(e){this._health=e,SetEntityHealth(this.id,e)}get maxHealth(){return this._maxHealth=GetEntityMaxHealth(this.id),this._maxHealth}set maxHealth(e){this._maxHealth=e,SetEntityMaxHealth(this.id,this._maxHealth)}get coords(){const e=GetEntityCoords(this.id);return this._coords=new Vector3(e[0],e[1],e[2]),this._coords}set coords(e){this._coords=e,SetEntityCoords(this.id,e.x,e.y,e.z,!1,!1,!1,!0)}set coordsNoOffset(e){this._coords=e,SetEntityCoordsNoOffset(this.id,e.x,e.y,e.z,!0,!0,!0)}get heading(){return this._heading=GetEntityHeading(this.id),this._heading}set heading(e){this._heading=e,SetEntityHeading(this.id,e)}get collision(){return this._collision=!GetEntityCollisionDisabled(this.id),this._collision}set collision(e){this._collision=value,SetEntityCollision(this.id,e,!1)}get networkId(){return this._networkId=NetworkGetNetworkIdFromEntity(this.id),this._networkId}GetByNetworkId(e){this.id=NetworkGetEntityFromNetworkId(e),this._networkId=e}IsDead(){return Boolean(IsEntityDead(this.id))}IsAlive(){return!this.isDead()}Exists(){return Boolean(DoesEntityExist(this.id))}Delete(){SetEntityAsMissionEntity(this.id,!1,!0),DeleteEntity(this.id)}GetBoneIndex(e){return GetEntityBoneIndexByName(this.id,e)}AsMission(e){let t=0,i=this,o=setInterval((function(){NetworkHasControlOfEntity(i.id)?(SetEntityAsMissionEntity(i.id),IsEntityAMissionEntity(i.id)&&(clearInterval(o),e(!0))):NetworkRequestControlOfEntity(this.id),10===t&&(clearInterval(o),e(!1)),t++}),20)}AsNetworked(e){let t=!1,i=0,o=this,n=setInterval((function(){NetworkHasControlOfEntity(o.id)?(NetworkRegisterEntityAsNetworked(o.id),t=o.networkId,t&&(SetNetworkIdCanMigrate(t,!0),SetNetworkIdExistsOnAllMachines(t,!0),NetworkDoesNetworkIdExist(t)&&(clearInterval(n),e(t)))):NetworkRequestControlOfEntity(this.id),10===i&&(clearInterval(n),e(!1)),i++}),20)}SetCoords(e,t,i){this.coords=new Vector3(e,t,i)}}
class Game{GenerateHash(e){return void 0!==e&&GetHashKey(e)}get language(){const e=GetUserLanguageId();return{id:e,language:Languages[e]}}get gameTime(){return GetGameTimer()}set timeScale(e){SetTimeScale(e<=1&&e>=0?e:1)}get frameCount(){return GetFrameCount()}GetFps(){return 1/this.lastFrameTime}get lastFrameTime(){return GetFrameTime()}get player(){const e=PlayerId();return void 0!==this._player&&e===this._player||(this._player=e),this._player}get maxWantedLevel(){return this.maxWantedLevel=GetMaxWantedLevel(),this._maxWantedLevel}set maxWantedLevel(e){e<0?e=0:e>5&&(e=5),this._maxWantedLevel=e,SetMaxWantedLevel(e)}set wantedMultiplier(e){this._maxWantedLevelMultiplier=e,SetWantedLevelMultiplier(e)}get wantedMultiplier(){return this._maxWantedLevelMultiplier}set showPoliceBlipsOnRadar(e){SetPoliceRadarBlips(e)}get nightVision(){return GetUsingnightvision()}set nightVision(e){SetNightvision(e)}get thermalVision(){return GetUsingseethrough()}set thermalVision(e){SetSeethrough(e)}get isMissionActive(){return GetMissionFlag()}set isMissionActive(e){SetMissionFlag(e)}get isRandomEventActive(){return 1===GetRandomEventFlag()}set isRandomEventActive(e){SetRandomEventFlag(e?1:0)}get isCutsceneActive(){return IsCutsceneActive()}get isWaypointActive(){return IsWaypointActive()}get isPaused(){return IsPauseMenuActive()}set isPaused(e){SetPauseMenuActive(e)}get isLoading(){return GetIsLoadingScreenActive()}StopLoading(){ShutdownLoadingScreen()}get CurrentInputMode(){return IsInputDisabled(2)?InputMode.MOUSSEANDKEYBOARD:InputMode.GAMEPAD}}
class Ped extends Entity{GetPlayer(e){this.id=GetPlayerPed(e)}SetDefaultComponentVariation(){SetPedDefaultComponentVariation(this.id)}SetComponentVariation(e,t,i){SetPedComponentVariation(this.id,e,t,i,0)}IsPlayingAnim(e,t,i=3){return IsEntityPlayingAnim(this.id,e,t,i)}TaskPlayAnim(e,t,i=-1,o=0,n,r=0,l=8,s=8,h=!1,a=!1,d=!1){if(DoesAnimDictExist(e)){RequestAnimDict(e);let c=this,u=setInterval((function(){HasAnimDictLoaded(e)&&(clearInterval(u),-1===i&&0===o&&(i=GetAnimDuration(e,t),setTimeout((function(){n()}),1e3*i)),TaskPlayAnim(c.id,e,t,l,s,i,o,r,h,a,d))}),10)}else console.log("Anim "+e+" not exist !")}TaskPlayAnimAdvanced(e,t,i,o,n,r,l,s,h=-1,a=0,d,c=8,u=8,y=0){if(DoesAnimDictExist(e)){RequestAnimDict(e);let S=this,p=setInterval((function(){HasAnimDictLoaded(e)&&(clearInterval(p),-1===h&&0===a&&(h=GetAnimDuration(e,t),setTimeout((function(){d()}),1e3*h)),TaskPlayAnimAdvanced(S.id,e,t,i,o,n,r,l,s,c,u,h,a,y))}),10)}else console.log("Anim "+e+" not exist !")}ClearPrimaryTasks(){ClearPedTasks(this.id)}ClearSecondaryTasks(){ClearPedSecondaryTask(this.id)}ClearAllTasks(){this.ClearPrimaryTasks(),this.ClearSecondaryTasks()}Spawn(e,t=!1,i=!1){if(IsModelAPed(this._model)){let o=0,n=this;RequestModel(this._model);let r=setInterval((function(){HasModelLoaded(n._model)&&(clearInterval(r),n.id=CreatePed(2,n._model,n._coords.x,n._coords.y,n._coords.z,n._heading,t,i),SetModelAsNoLongerNeeded(n._model),e(n.id)),50===o&&(clearInterval(r),e(!1)),o++}),20)}else e(!1)}CurrentVehicle(){const e=new Vehicle(GetVehiclePedIsIn(this.id,!1));return!!e.Exists()&&e}LastVehicle(){const e=new Vehicle(GetVehiclePedIsIn(this.id,!0));return!!e.Exists()&&e}VehicleTryingToEnter(){const e=new Vehicle(GetVehiclePedIsTryingToEnter(this.id));return!!e.Exists()&&e}SetDrivingStyle(e){SetDriveTaskDrivingStyle(this.id,Number(DrivingStyle[e]))}IsInAnyVehicle(){return IsPedInAnyVehicle(this.id,!1)}IsInVehicle(e){return IsPedInVehicle(this.id,e.id,!1)}IsSittingInAnyVehicle(){return IsPedSittingInAnyVehicle(this.id)}IsSittingInVehicle(e){return IsPedSittingInVehicle(this.id,e.id)}SetIntoVehicle(e,t){SetPedIntoVehicle(this.id,e.id,t)}Kill(){this.health=-1}Resurrect(){const e=this.maxHealth,t=this.collision;ResurrectPed(this.id),this.health=e,this.collision=t,ClearPedTasksImmediately(this.id)}ResetVisibleDamage(){ResetPedVisibleDamage(this.id)}ClearBloodDamage(){ClearPedBloodDamage(this.id)}IsInGroup(){return IsPedInGroup(this.id)}NeverLeavesGroup(e){SetPedNeverLeavesGroup(this.id,e)}LeaveGroup(){RemovePedFromGroup(this.id)}ApplyDamage(e){ApplyDamageToPed(this.id,e,!0)}HasBeenDamagedBy(e){return HasPedBeenDamagedByWeapon(this.id,e,0)}HasBeenDamagedByAnyWeapon(){return HasPedBeenDamagedByWeapon(this.id,0,2)}HasBeenDamagedByAnyMeleeWeapon(){return HasPedBeenDamagedByWeapon(this.id,0,1)}ClearLastWeaponDamage(){ClearPedLastWeaponDamage(this.id)}GiveWeapon(e,t=999,i=!1,o=!0){GiveWeaponToPed(this.id,e,t,i,o)}RemoveWeapon(e){RemoveWeaponFromPed(this.id,e)}RemoveAllWeapons(){RemoveAllPedWeapons(this.id,!0)}get CanRagdoll(){return CanPedRagdoll(this.id)}set CanRagdoll(e){SetPedCanRagdoll(this.id,e)}Ragdoll(e=-1,t=RagdollType.Normal){this.CanRagdoll=!0,SetPedToRagdoll(this.id,e,e,Number(t),!1,!1,!1)}GiveHelmet(e,t,i){GivePedHelmet(this.id,!e,Number(t),i)}RemoveHelmet(e=!0){RemovePedHelmet(this.id,e)}OpenParachute(){ForcePedToOpenParachute(this.id)}GetConfigFlag(e){return GetPedConfigFlag(this.id,e,!0)}SetConfigFlag(e,t){SetPedConfigFlag(this.id,e,t)}ResetConfigFlag(e){SetPedResetFlag(this.id,e,!0)}Clone(e){return new Ped(ClonePed(this.id,e,!1,!1))}}
class Vehicle extends Entity{constructor(){super(),this.windowsIndex=["window_lf","window_rf","window_lr","window_rr"]}get bodyHealth(){return this._bodyHealth=GetVehicleBodyHealth(this.id),this._bodyHealth}set bodyHealth(e){this._bodyHealth=Number(e),SetVehicleBodyHealth(this.id,Number(e))}get class(){return void 0===this._class&&(this._class=GetVehicleClass(this.id)),this._class}get colours(){const e=GetVehicleColours(this.id);return this._colours={primary:e[0],secondary:e[1]},this._colours}set colours(e){this._colours=e,SetVehicleColours(this.id,e.primary,e.secondary)}get customTires(){return this._customTires}set customTires(e){this._customTires=e}get dirtLevel(){return this._dirtLevel=GetVehicleDirtLevel(this.id),this._dirtLevel}set dirtLevel(e){this._dirtLevel=Number(e),SetVehicleDirtLevel(this.id,Number(e))}get doors(){return this._doors}set doors(e){this._doors=e}get engineHealth(){return this._engineHealth=GetVehicleEngineHealth(this.id),this._engineHealth}set engineHealth(e){this._engineHealth=Number(e),SetVehicleEngineHealth(this.id,Number(e))}get engineIsRunning(){return this._engineIsRunning=GetIsVehicleEngineRunning(this.id),this._engineIsRunning}set engineIsRunning(e){this._engineIsRunning=Boolean(e),SetVehicleEngineOn(this.id,this._engineIsRunning,!0,!0)}get extraColours(){const e=GetVehicleExtraColours(this.id);return this._extraColours={pearlescent:e[0],wheel:e[1]},this._extraColours}set extraColours(e){this._extraColours=e,SetVehicleExtraColours(this.id,e.pearlescent,e.wheel)}get extras(){this._extras={};for(let e=0;e<14;e++)this._extras[e]=Boolean(this.IsVehicleExtraTurnedOn(e));return this._extras}set extras(e){this._extras[e.extra]=e.state,SetVehicleExtra(this.id,e.extra,e.state)}get fuelLevel(){return this._fuelLevel=GetVehicleFuelLevel(this.id),this._fuelLevel}set fuelLevel(e){this._fuelLevel=Number(e),SetVehicleFuelLevel(this.id,this._fuelLevel)}set lightMultiplier(e){this._lightMultiplier=Number(e),SetVehicleLightMultiplier(this.id,this._lightMultiplier)}get lights(){const e=GetVehicleLightsState(this.id);return this._lights=e[1]+e[2],this._lights}set lightsMode(e){this._lightsMode=Number(e),SetVehicleLightsMode(this.id,this._lightsMode)}get livery(){return this._livery=GetVehicleLivery(this.id),this._livery}set livery(e){this._livery=e,SetVehicleLivery(this.id,e)}get lookStatus(){return this._lookStatus=GetVehicleDoorLockStatus(this.id),this._lookStatus}set lookStatus(e){this._lookStatus=Boolean(e),SetVehicleDoorsLocked(this.id,Boolean(e))}get modColor1(){const e=GetVehicleModColor_1(this.id);return this._modColor1={paintType:e[0],color:e[1],pearlescent:e[2]},this._modColor1}set modColor1(e){this._modColor1=e,SetVehicleModColor_1(this.id,e.paintType,e.color,e.pearlescent)}get modColor2(){const e=GetVehicleModColor_2(this.id);return this._modColor2={paintType:e[0],color:e[1]},this._modColor2}set modColor2(e){this._modColor2=e,SetVehicleModColor_2(this.id,e.paintType,e.color)}get neonColour(){const e=GetVehicleNeonLightsColour(this.id);return this._neonColour={red:e[0],green:e[1],blue:e[2]},this._neonColour}set neonColour(e){this._neonColour=e,SetVehicleNeonLightsColour(this.id,e.red,e.green,e.blue)}get petrolTankHealth(){return this._petrolTankHealth=GetVehiclePetrolTankHealth(this.id),this._petrolTankHealth}set petrolTankHealth(e){this._petrolTankHealth=Number(e),SetVehiclePetrolTankHealth(this.id,this._petrolTankHealth)}get plateStyle(){return this._plateStyle=GetVehicleNumberPlateTextIndex(this.id),this._plateStyle}set plateStyle(e){this._plateStyle=Number(e),SetVehicleNumberPlateTextIndex(this.id,this._plateStyle)}get plateText(){return this._plateText=GetVehicleNumberPlateText(this.id),this._plateText}set plateText(e){this._plateText=e,SetVehicleNumberPlateText(this.id,this._plateText)}get primaryColour(){const e=GetVehicleCustomPrimaryColour(this.id);return this._primaryColour={red:e[0],green:e[1],blue:e[2]},this._primaryColour}set primaryColour(e){this._primaryColour=e,SetVehicleCustomPrimaryColour(this.id,e.red,e.green,e.blue)}get secondaryColour(){const e=GetVehicleCustomSecondaryColour(this.id);return this._secondaryColour={red:e[0],green:e[1],blue:e[2]},this._secondaryColour}set secondaryColour(e){this._secondaryColour=e,SetVehicleCustomSecondaryColour(this.id,e.red,e.green,e.blue)}get siren(){return this._siren=IsVehicleSirenOn(this.id),this._siren}set siren(e){this._siren=e,SetVehicleSiren(this.id,e)}get trailer(){const e=GetVehicleTrailerVehicle(this.id);return this._trailer=e[1],this._trailer}set trailer(e){this._trailer=e,AttachVehicleToTrailer(this.id,e)}get tyreSmokeColor(){const e=GetVehicleTyreSmokeColor(this.id);return this._tyreSmoke={red:e[0],green:e[1],blue:e[2]},this._tyreSmoke}set tyreSmokeColor(e){this._tyreSmoke=e,SetVehicleTyreSmokeColor(this.id,e.red,e.green,e.blue)}get wheelType(){return this._wheelType=GetVehicleWheelType(this.id),this._wheelType}set wheelType(e){this._wheelType=e,SetVehicleWheelType(this.id,e)}get windowTint(){return this._windowTint=GetVehicleWindowTint(this.id),this._windowTint}set windowTint(e){this._windowTint=e,SetVehicleWindowTint(this.id,e)}GetAllDoorState(){this._doors={};for(let e=0;e<this.GetNumberDoors();e++)this.GetDoorState(e);return this._doors}SetAllDoorsState(e){for(let t in e)this.SetDoorState(t,e[t])}GetAllMod(){for(let e=0;e<49;e++)this.GetMod(e);return this._mod}SetAllMod(e){for(let t in e)this.SetMod(t,e[t])}GetAllNeonLight(){for(let e=0;e<3;e++)this.GetNeonLight(e);return this._neonLight}SetAllNeonLight(e){for(let t in e)this.SetNeonLight(t,e[t])}GetAllTyreBurst(){this._tyreBurst={};const e={wheel_lf:0,wheel_rf:1,wheel_lm1:2,wheel_rm1:3,wheel_lr:4,wheel_rr:5,wheel_lm2:45,wheel_rm2:47,wheel_lm3:46,wheel_rm3:48};for(let t in e)-1!==GetEntityBoneIndexByName(this.id,t)&&IsVehicleTyreBurst(this.id,e[t],!1)&&(this._tyreBurst[e[t]]=!0);return this._tyreBurst}SetTyreBurst(e,t,i=1e3){void 0===this._tyreBurst&&(this._tyreBurst={}),SetVehicleTyreBurst(this.id,Number(e),Boolean(t),i),this._tyreBurst[Number(e)]=Boolean(t)}GetAllWindowState(){this.__windows={};for(let e in this.windowsIndex)this.GetWindowIsIntact(e);return this.__windows}GetDoorAngleRatio(e){return GetVehicleDoorAngleRatio(this.id,Number(e))}GetDoorState(e){let t;return void 0===this._doors&&(this._doors={}),t=this.IsDoorDamaged(e)?-1:this.GetDoorAngleRatio(e),this._doors[Number(e)]=t,t}SetDoorState(e,t){if(void 0===this._doors&&(this._doors={}),-1===Number(t))this.SetDoorBroken(e,!0);else if(0===Number(t))this.SetDoorShut(e,!0);else{this.SetDoorOpen(e,!1,!0);let t=this;setTimeout((function(){t.SetDoorLatched(e,!1,!0)}),100)}this._doors[Number(e)]=t}GetMod(e){return void 0===this._mod&&(this._mod={}),this._mod[Number(e)]=e>=17&&e<=22?Boolean(IsToggleModOn(this.id,Number(e))):GetVehicleMod(this.id,Number(e)),this._mod}SetMod(e,t){void 0===this._mod&&(this._mod={},SetVehicleModKit(this.id,0)),void 0===this._customTires&&(this._customTires=!1),Number(e)>=17&&Number(e)<=22?(ToggleVehicleMod(this.id,Number(e),Boolean(t)),this._mod[Number(e)]=Boolean(t)):(SetVehicleMod(this.id,Number(e),Number(t),this._customTires),this._mod[Number(e)]=Number(t))}GetNeonLight(e){void 0===this._neonLight&&(this._neonLight={}),this._neonLight[e]=Boolean(IsVehicleNeonLightEnabled(this.id,e))}SetNeonLight(e,t){void 0===this._neonLight&&(this._neonLight={}),this._neonLight[Number(e)]=Boolean(t),SetVehicleNeonLightEnabled(this.id,Number(e),Boolean(t))}GetNumberDoors(){return void 0===this._maxDoors&&(this._maxDoors=GetNumberOfVehicleDoors(this.id)),this._maxDoors}IsNeonLightEnabled(e){return Boolean(IsVehicleNeonLightEnabled(this.id,Boolean(e)))}IsDoorDamaged(e){return IsVehicleDoorDamaged(this.id,Number(e))}IsVehicleExtraTurnedOn(e){return IsVehicleExtraTurnedOn(this.id,e)}SetDoorBroken(e,t){SetVehicleDoorBroken(this.id,Number(e),Boolean(t)),this._doors[Number(e)]=-1}SetDoorShut(e,t){SetVehicleDoorShut(this.id,Number(e),Boolean(t)),this._doors[Number(e)]=0}SetDoorOpen(e,t,i){SetVehicleDoorOpen(this.id,Number(e),Boolean(t),Boolean(i))}SetDoorControl(e,t,i){SetVehicleDoorControl(this.id,Number(e),Number(t),Number(i))}SetDoorLatched(e,t,i){SetVehicleDoorLatched(this.id,Number(e),Boolean(t),Boolean(i))}SetAllTyreBurst(e){for(let t in e)this.SetTyreBurst(t,e[t])}GetWindowIsIntact(e){void 0===this.__windows&&(this.__windows={});const t=this.windowsIndex[e];return-1!==GetEntityBoneIndexByName(this.id,t)&&(this.__windows[t]=Boolean(IsVehicleWindowIntact(this.id,Number(e))),this.__windows[t])}SmashWindow(e){SmashVehicleWindow(this.id,Number(e)),this.__windows[Number(e)]=!1}SetAllWindowState(e){void 0===this.__windows&&(this.__windows={});for(let t in e)if(!1===e[t])for(let e in this.windowsIndex)if(this.windowsIndex[e]===t){this.SmashWindow(e);break}}GetVehiclePed(e){return this.id=GetVehiclePedIsUsing(e)}Spawn(e,t=!1,i=!1){if(IsModelAVehicle(this._model)){let o=0,n=this;RequestModel(this._model);let r=setInterval((function(){if(HasModelLoaded(n._model)){clearInterval(r),n.id=CreateVehicle(n._model,n._coords.x,n._coords.y,n._coords.z,n._heading,t,i);const o=["id","_model","_coords","_heading","_networkId","_mod","_neonLight","_doors","_tyreBurst","__windows"];for(let e in n)o.includes(e)||(n[e.substring(1)]=n[e]);void 0!==n._mod&&(SetVehicleModKit(n.id,0),n.SetAllMod(n._mod)),void 0!==n._neonLight&&n.SetAllNeonLight(n._neonLight),void 0!==n._doors&&n.SetAllDoorsState(n._doors),void 0!==n._tyreBurst&&n.SetAllTyreBurst(n._tyreBurst),void 0!==n.__windows&&n.SetAllWindowState(n.__windows),SetModelAsNoLongerNeeded(n._model),e(n.id)}50===o&&(clearInterval(r),e(!1)),o++}),20)}else e(!1)}}
const AudioFlag=new Enum(["ActivateSwitchWheelAudio","AllowCutsceneOverScreenFade","AllowForceRadioAfterRetune","AllowPainAndAmbientSpeechToPlayDuringCutscene","AllowPlayerAIOnMission","AllowPoliceScannerWhenPlayerHasNoControl","AllowRadioDuringSwitch","AllowRadioOverScreenFade","AllowScoreAndRadio","AllowScriptedSpeechInSlowMo","AvoidMissionCompleteDelay","DisableAbortConversationForDeathAndInjury","DisableAbortConversationForRagdoll","DisableBarks","DisableFlightMusic","DisableReplayScriptStreamRecording","EnableHeadsetBeep","ForceConversationInterrupt","ForceSeamlessRadioSwitch","ForceSniperAudio","FrontendRadioDisabled","HoldMissionCompleteWhenPrepared","IsDirectorModeActive","IsPlayerOnMissionForSpeech","ListenerReverbDisabled","LoadMPData","MobileRadioInGame","OnlyAllowScriptTriggerPoliceScanner","PlayMenuMusic","PoliceScannerDisabled","ScriptedConvListenerMaySpeak","SpeechDucksScore","SuppressPlayerScubaBreathing","WantedMusicDisabled","WantedMusicOnMission"]),InputMode=new Enum({MOUSSEANDKEYBOARD:0,GAMEPAD:1}),Control=new Enum(["NextCamera","LookLeftRight","LookUpDown","LookUpOnly","LookDownOnly","LookLeftOnly","LookRightOnly","CinematicSlowMo","FlyUpDown","FlyLeftRight","ScriptedFlyZUp","ScriptedFlyZDown","WeaponWheelUpDown","WeaponWheelLeftRight","WeaponWheelNext","WeaponWheelPrev","SelectNextWeapon","SelectPrevWeapon","SkipCutscene","CharacterWheel","MultiplayerInfo","Sprint","Jump","Enter","Attack","Aim","LookBehind","Phone","SpecialAbility","SpecialAbilitySecondary","MoveLeftRight","MoveUpDown","MoveUpOnly","MoveDownOnly","MoveLeftOnly","MoveRightOnly","Duck","SelectWeapon","Pickup","SniperZoom","SniperZoomInOnly","SniperZoomOutOnly","SniperZoomInSecondary","SniperZoomOutSecondary","Cover","Reload","Talk","Detonate","HUDSpecial","Arrest","AccurateAim","Context","ContextSecondary","WeaponSpecial","WeaponSpecial2","Dive","DropWeapon","DropAmmo","ThrowGrenade","VehicleMoveLeftRight","VehicleMoveUpDown","VehicleMoveUpOnly","VehicleMoveDownOnly","VehicleMoveLeftOnly","VehicleMoveRightOnly","VehicleSpecial","VehicleGunLeftRight","VehicleGunUpDown","VehicleAim","VehicleAttack","VehicleAttack2","VehicleAccelerate","VehicleBrake","VehicleDuck","VehicleHeadlight","VehicleExit","VehicleHandbrake","VehicleHotwireLeft","VehicleHotwireRight","VehicleLookBehind","VehicleCinCam","VehicleNextRadio","VehiclePrevRadio","VehicleNextRadioTrack","VehiclePrevRadioTrack","VehicleRadioWheel","VehicleHorn","VehicleFlyThrottleUp","VehicleFlyThrottleDown","VehicleFlyYawLeft","VehicleFlyYawRight","VehiclePassengerAim","VehiclePassengerAttack","VehicleSpecialAbilityFranklin","VehicleStuntUpDown","VehicleCinematicUpDown","VehicleCinematicUpOnly","VehicleCinematicDownOnly","VehicleCinematicLeftRight","VehicleSelectNextWeapon","VehicleSelectPrevWeapon","VehicleRoof","VehicleJump","VehicleGrapplingHook","VehicleShuffle","VehicleDropProjectile","VehicleMouseControlOverride","VehicleFlyRollLeftRight","VehicleFlyRollLeftOnly","VehicleFlyRollRightOnly","VehicleFlyPitchUpDown","VehicleFlyPitchUpOnly","VehicleFlyPitchDownOnly","VehicleFlyUnderCarriage","VehicleFlyAttack","VehicleFlySelectNextWeapon","VehicleFlySelectPrevWeapon","VehicleFlySelectTargetLeft","VehicleFlySelectTargetRight","VehicleFlyVerticalFlightMode","VehicleFlyDuck","VehicleFlyAttackCamera","VehicleFlyMouseControlOverride","VehicleSubTurnLeftRight","VehicleSubTurnLeftOnly","VehicleSubTurnRightOnly","VehicleSubPitchUpDown","VehicleSubPitchUpOnly","VehicleSubPitchDownOnly","VehicleSubThrottleUp","VehicleSubThrottleDown","VehicleSubAscend","VehicleSubDescend","VehicleSubTurnHardLeft","VehicleSubTurnHardRight","VehicleSubMouseControlOverride","VehiclePushbikePedal","VehiclePushbikeSprint","VehiclePushbikeFrontBrake","VehiclePushbikeRearBrake","MeleeAttackLight","MeleeAttackHeavy","MeleeAttackAlternate","MeleeBlock","ParachuteDeploy","ParachuteDetach","ParachuteTurnLeftRight","ParachuteTurnLeftOnly","ParachuteTurnRightOnly","ParachutePitchUpDown","ParachutePitchUpOnly","ParachutePitchDownOnly","ParachuteBrakeLeft","ParachuteBrakeRight","ParachuteSmoke","ParachutePrecisionLanding","Map","SelectWeaponUnarmed","SelectWeaponMelee","SelectWeaponHandgun","SelectWeaponShotgun","SelectWeaponSmg","SelectWeaponAutoRifle","SelectWeaponSniper","SelectWeaponHeavy","SelectWeaponSpecial","SelectCharacterMichael","SelectCharacterFranklin","SelectCharacterTrevor","SelectCharacterMultiplayer","SaveReplayClip","SpecialAbilityPC","PhoneUp","PhoneDown","PhoneLeft","PhoneRight","PhoneSelect","PhoneCancel","PhoneOption","PhoneExtraOption","PhoneScrollForward","PhoneScrollBackward","PhoneCameraFocusLock","PhoneCameraGrid","PhoneCameraSelfie","PhoneCameraDOF","PhoneCameraExpression","FrontendDown","FrontendUp","FrontendLeft","FrontendRight","FrontendRdown","FrontendRup","FrontendRleft","FrontendRright","FrontendAxisX","FrontendAxisY","FrontendRightAxisX","FrontendRightAxisY","FrontendPause","FrontendPauseAlternate","FrontendAccept","FrontendCancel","FrontendX","FrontendY","FrontendLb","FrontendRb","FrontendLt","FrontendRt","FrontendLs","FrontendRs","FrontendLeaderboard","FrontendSocialClub","FrontendSocialClubSecondary","FrontendDelete","FrontendEndscreenAccept","FrontendEndscreenExpand","FrontendSelect","ScriptLeftAxisX","ScriptLeftAxisY","ScriptRightAxisX","ScriptRightAxisY","ScriptRUp","ScriptRDown","ScriptRLeft","ScriptRRight","ScriptLB","ScriptRB","ScriptLT","ScriptRT","ScriptLS","ScriptRS","ScriptPadUp","ScriptPadDown","ScriptPadLeft","ScriptPadRight","ScriptSelect","CursorAccept","CursorCancel","CursorX","CursorY","CursorScrollUp","CursorScrollDown","EnterCheatCode","InteractionMenu","MpTextChatAll","MpTextChatTeam","MpTextChatFriends","MpTextChatCrew","PushToTalk","CreatorLS","CreatorRS","CreatorLT","CreatorRT","CreatorMenuToggle","CreatorAccept","CreatorDelete","Attack2","RappelJump","RappelLongJump","RappelSmashWindow","PrevWeapon","NextWeapon","MeleeAttack1","MeleeAttack2","Whistle","MoveLeft","MoveRight","MoveUp","MoveDown","LookLeft","LookRight","LookUp","LookDown","SniperZoomIn","SniperZoomOut","SniperZoomInAlternate","SniperZoomOutAlternate","VehicleMoveLeft","VehicleMoveRight","VehicleMoveUp","VehicleMoveDown","VehicleGunLeft","VehicleGunRight","VehicleGunUp","VehicleGunDown","VehicleLookLeft","VehicleLookRight","ReplayStartStopRecording","ReplayStartStopRecordingSecondary","ScaledLookLeftRight","ScaledLookUpDown","ScaledLookUpOnly","ScaledLookDownOnly","ScaledLookLeftOnly","ScaledLookRightOnly","ReplayMarkerDelete","ReplayClipDelete","ReplayPause","ReplayRewind","ReplayFfwd","ReplayNewmarker","ReplayRecord","ReplayScreenshot","ReplayHidehud","ReplayStartpoint","ReplayEndpoint","ReplayAdvance","ReplayBack","ReplayTools","ReplayRestart","ReplayShowhotkey","ReplayCycleMarkerLeft","ReplayCycleMarkerRight","ReplayFOVIncrease","ReplayFOVDecrease","ReplayCameraUp","ReplayCameraDown","ReplaySave","ReplayToggletime","ReplayToggletips","ReplayPreview","ReplayToggleTimeline","ReplayTimelinePickupClip","ReplayTimelineDuplicateClip","ReplayTimelinePlaceClip","ReplayCtrl","ReplayTimelineSave","ReplayPreviewAudio","VehicleDriveLook","VehicleDriveLook2","VehicleFlyAttack2","RadioWheelUpDown","RadioWheelLeftRight","VehicleSlowMoUpDown","VehicleSlowMoUpOnly","VehicleSlowMoDownOnly","VehicleHydraulicsControlToggle","VehicleHydraulicsControlLeft","VehicleHydraulicsControlRight","VehicleHydraulicsControlUp","VehicleHydraulicsControlDown","VehicleHydraulicsControlUpDown","VehicleHydraulicsControlLeftRight","SwitchVisor","VehicleMeleeHold","VehicleMeleeLeft","VehicleMeleeRight","MapPointOfInterest","ReplaySnapmaticPhoto","VehicleCarJump","VehicleRocketBoost","VehicleFlyBoost","VehicleParachute","VehicleBikeWings","VehicleFlyBombBay","VehicleFlyCounter","VehicleFlyTransform"]),DrivingStyle=new Enum({None:0,Normal:786603,IgnoreLights:2883621,SometimesOvertakeTraffic:5,Rushed:1074528293,AvoidTraffic:786468,AvoidTrafficExtremely:6,AvoidHighwaysWhenPossible:536870912,IgnorePathing:16777216,IgnoreRoads:4194304,ShortestPath:262144,Backwards:1024}),VehicleDrivingFlags=new Enum({None:0,FollowTraffic:1,YieldToPeds:2,AvoidVehicles:4,AvoidEmptyVehicles:8,AvoidPeds:16,AvoidObjects:32,StopAtTrafficLights:128,UseBlinkers:256,AllowGoingWrongWay:512,Reverse:1024,AllowMedianCrossing:262144,DriveBySight:4194304,IgnorePathFinding:16777216,TryToAvoidHighways:536870912,StopAtDestination:2147483648}),HelmetType=new Enum({RegularMotorcycleHelmet:4096,FiremanHelmet:16384,PilotHeadset:32768}),Languages=new Enum({7:"french",9:"japanese",10:"spanish",12:"english",16:"portuguese",17:"korean",21:"italian",22:"german",25:"russian"}),RagdollType=new Enum({Normal:0,StiffLegs:1,NarrowLegs:2,WideLegs:3});
let _onSpawn=[];function OnPlayerSpawn(e){_onSpawn.push(e)}RegisterServerEvent("playerSpawned"),AddEventHandler("playerSpawned",(function(){_onSpawn.forEach((function(e){e()}))}));
let _onSessionStarted=[];function OnSessionStarted(e){_onSessionStarted.push(e)}const _OnSessionStartedTimer=setInterval((function(){NetworkIsSessionStarted()&&(clearInterval(_OnSessionStartedTimer),_onSessionStarted.forEach((function(e){e()})))}),10);
function Enum(e){if(e instanceof Array){let t={},i=0;return e.forEach(e=>{t[e]=i,i++}),Object.freeze(t)}return Object.freeze(e)}
class Vector3{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}Clone(){return new Vector3(this.x,this.y,this.z)}Add(e,t,i){return e&&t&&i?(this.x+=e,this.y+=t,this.z+=i):"number"==typeof e?(this.x+=e,this.y+=e,this.z+=e):e instanceof Vector3&&(this.x+=e.x,this.y+=e.y,this.z+=e.z),this}Subtract(e,t,i){return e&&t&&i?(this.x-=e,this.y-=t,this.z-=i):"number"==typeof e?(this.x-=e,this.y-=e,this.z-=e):e instanceof Vector3&&(this.x-=e.x,this.y-=e.y,this.z-=e.z),this}Multiply(e,t,i){return e&&t&&i?(this.x*=e,this.y*=t,this.z*=i):"number"==typeof e?(this.x*=e,this.y*=e,this.z*=e):e instanceof Vector3&&(this.x*=e.x,this.y*=e.y,this.z*=e.z),this}Divide(e,t,i){return e&&t&&i?(this.x/=e,this.y/=t,this.z/=i):"number"==typeof e?(this.x/=e,this.y/=e,this.z/=e):e instanceof Vector3&&(this.x/=e.x,this.y/=e.y,this.z/=e.z),this}DotProduct(e){return this.x*e.x+this.y*e.y+this.z*e.z}CrossProduct(e){const t=this.y*e.z-this.z*e.y,i=this.z*e.x-this.z*e.z,o=this.x*e.y-this.z*e.x;return new Vector3(t,i,o)}Normalize(){return this.Divide(this.Length())}IsEquals(e,t,i){return e&&t&&i?this.x===e&&this.y===t&&this.z===i:"number"==typeof e?this.x===e&&this.y===e&&this.z===e:e instanceof Vector3?this.x===e.x&&this.y===e.y&&this.z===e.z:void 0}AngleTo(e){const t=Math.sqrt(this.Length()*e.Length());0===t&&console.error("Vector3: angleTo() can't handle zero length vectors.");const i=this.DotProduct(e)/t;return Math.acos(Math.clamp(i,-1,1))}Length(){return this.x*this.x+this.y*this.y+this.z*this.z}Max(e){return e?(this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this):Math.max(this.x,this.y,this.z)}Min(e){return e?(this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this):Math.min(this.x,this.y,this.z)}Negative(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}ToArray(){return[this.x,this.y,this.z]}DistanceTo(e){return Math.sqrt(this.DistanceToSquared(e))}DistanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,o=this.z-e.z;return t*t+i*i+o*o}}